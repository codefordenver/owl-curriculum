/**********************************************************************
 * Extern for bigInt.js
 **********************************************************************/

var bigInt = function() {};
bigInt.prototype.mod = function() {};
bigInt.prototype.pow = function() {};

/**********************************************************************
 * Extern for srcdoc-polyfill.js
 **********************************************************************/

function srcdocPolyfill() {}

/**********************************************************************
 * Extern for firebase
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var firebase = {
  "INTERNAL": {
    "ErrorFactory": function () {},
    "Promise": function () {},
    "createFirebaseNamespace": function () {},
    "createSubscribe": function () {},
    "deepExtend": function () {},
    "extendNamespace": function () {},
    "factories": {
      "auth": function () {},
      "database": function () {},
      "messaging": function () {},
      "storage": function () {}
    },
    "registerService": function () {},
    "removeApp": function () {},
    "useAsService": function () {}
  },
  "Promise": function () {},
  "SDK_VERSION": {},
  "User": {
    "Rc": function () {},
    "ib": {
      "closure_listenable_926220": {},
      "constructor": {
        "Rc": function () {},
        "ib": {
          "oa": {},
          "ta": function () {}
        }
      },
      "oa": {},
      "removeEventListener": function () {},
      "ta": function () {}
    }
  },
  "__esModule": {},
  "app": {
    "App": function () {}
  },
  "apps": {},
  "auth": {
    "Auth": {
      "Persistence": {
        "LOCAL": {},
        "Lc": {},
        "NONE": {},
        "Nc": {},
        "SESSION": {}
      },
      "Rc": function () {},
      "ib": {
        "closure_listenable_926220": {},
        "constructor": {
          "Rc": function () {},
          "ib": {
            "oa": {},
            "ta": function () {}
          }
        },
        "oa": {},
        "removeEventListener": function () {},
        "ta": function () {}
      }
    },
    "EmailAuthProvider": {
      "PROVIDER_ID": {},
      "credential": function () {}
    },
    "Error": {
      "Rc": function () {},
      "ib": {}
    },
    "FacebookAuthProvider": {
      "PROVIDER_ID": {},
      "Rc": function () {},
      "credential": function () {},
      "ib": {
        "Ba": function () {},
        "addScope": function () {},
        "constructor": {
          "Rc": function () {},
          "ib": {
            "Ba": function () {}
          }
        },
        "credential": function () {},
        "sa": function () {},
        "setCustomParameters": function () {},
        "wb": function () {}
      }
    },
    "GithubAuthProvider": {
      "PROVIDER_ID": {},
      "Rc": function () {},
      "credential": function () {},
      "ib": {
        "Ba": function () {},
        "addScope": function () {},
        "constructor": {
          "Rc": function () {},
          "ib": {
            "Ba": function () {}
          }
        },
        "credential": function () {},
        "sa": function () {},
        "setCustomParameters": function () {},
        "wb": function () {}
      }
    },
    "GoogleAuthProvider": {
      "PROVIDER_ID": {},
      "Rc": function () {},
      "credential": function () {},
      "ib": {
        "Ba": function () {},
        "addScope": function () {},
        "constructor": {
          "Rc": function () {},
          "ib": {
            "Ba": function () {}
          }
        },
        "credential": function () {},
        "sa": function () {},
        "setCustomParameters": function () {},
        "wb": function () {}
      }
    },
    "OAuthProvider": {
      "Rc": function () {},
      "ib": {
        "Ba": function () {}
      }
    },
    "PhoneAuthProvider": {
      "PROVIDER_ID": {},
      "credential": function () {}
    },
    "RecaptchaVerifier": {
      "Rc": function () {},
      "ib": {
        "clear": function () {},
        "render": function () {},
        "reset": function () {},
        "verify": function () {},
        "xa": function () {}
      }
    },
    "TwitterAuthProvider": {
      "PROVIDER_ID": {},
      "Rc": function () {},
      "credential": function () {},
      "ib": {
        "Ba": function () {}
      }
    }
  },
  "database": {
    "Database": {
      "ServerValue": {
        "TIMESTAMP": {
          ".sv": {}
        }
      }
    },
    "INTERNAL": {
      "dataUpdateCount": function () {},
      "forceLongPolling": function () {},
      "forceWebSockets": function () {},
      "interceptServerData": function () {},
      "isWebSocketsAvailable": function () {},
      "setSecurityDebugCallback": function () {},
      "stats": function () {},
      "statsIncrementCounter": function () {}
    },
    "Query": {
      "Le": function () {},
      "Me": function () {},
      "__referenceConstructor": {
        "Le": function () {},
        "Me": function () {},
        "__referenceConstructor": function () {},
        "xe": function () {}
      },
      "xe": function () {}
    },
    "Reference": {
      "Le": function () {},
      "Me": function () {},
      "__referenceConstructor": function () {},
      "xe": function () {}
    },
    "ServerValue": {
      "TIMESTAMP": {
        ".sv": {}
      }
    },
    "TEST_ACCESS": {
      "ConnectionTarget": function () {},
      "DataConnection": {
        "Ct": function () {},
        "Xe": {},
        "jt": {}
      },
      "RealTimeConnection": function () {},
      "forceRestClient": function () {},
      "hijackHash": function () {},
      "listens": function () {},
      "queryIdentifier": function () {}
    },
    "enableLogging": function () {}
  },
  "default": {
    "INTERNAL": {
      "ErrorFactory": function () {},
      "Promise": function () {},
      "createFirebaseNamespace": function () {},
      "createSubscribe": function () {},
      "deepExtend": function () {},
      "extendNamespace": function () {},
      "factories": {
        "auth": function () {},
        "database": function () {},
        "messaging": function () {},
        "storage": function () {}
      },
      "registerService": function () {},
      "removeApp": function () {},
      "useAsService": function () {}
    },
    "Promise": function () {},
    "SDK_VERSION": {},
    "User": {
      "Rc": function () {},
      "ib": {
        "closure_listenable_926220": {},
        "constructor": {
          "Rc": function () {},
          "ib": {
            "oa": {},
            "ta": function () {}
          }
        },
        "oa": {},
        "removeEventListener": function () {},
        "ta": function () {}
      }
    },
    "__esModule": {},
    "app": {
      "App": function () {}
    },
    "apps": {},
    "auth": {
      "Auth": {
        "Persistence": {
          "LOCAL": {},
          "Lc": {},
          "NONE": {},
          "Nc": {},
          "SESSION": {}
        },
        "Rc": function () {},
        "ib": {
          "closure_listenable_926220": {},
          "constructor": {
            "Rc": function () {},
            "ib": {
              "oa": {},
              "ta": function () {}
            }
          },
          "oa": {},
          "removeEventListener": function () {},
          "ta": function () {}
        }
      },
      "EmailAuthProvider": {
        "PROVIDER_ID": {},
        "credential": function () {}
      },
      "Error": {
        "Rc": function () {},
        "ib": {}
      },
      "FacebookAuthProvider": {
        "PROVIDER_ID": {},
        "Rc": function () {},
        "credential": function () {},
        "ib": {
          "Ba": function () {},
          "addScope": function () {},
          "constructor": {
            "Rc": function () {},
            "ib": {
              "Ba": function () {}
            }
          },
          "credential": function () {},
          "sa": function () {},
          "setCustomParameters": function () {},
          "wb": function () {}
        }
      },
      "GithubAuthProvider": {
        "PROVIDER_ID": {},
        "Rc": function () {},
        "credential": function () {},
        "ib": {
          "Ba": function () {},
          "addScope": function () {},
          "constructor": {
            "Rc": function () {},
            "ib": {
              "Ba": function () {}
            }
          },
          "credential": function () {},
          "sa": function () {},
          "setCustomParameters": function () {},
          "wb": function () {}
        }
      },
      "GoogleAuthProvider": {
        "PROVIDER_ID": {},
        "Rc": function () {},
        "credential": function () {},
        "ib": {
          "Ba": function () {},
          "addScope": function () {},
          "constructor": {
            "Rc": function () {},
            "ib": {
              "Ba": function () {}
            }
          },
          "credential": function () {},
          "sa": function () {},
          "setCustomParameters": function () {},
          "wb": function () {}
        }
      },
      "OAuthProvider": {
        "Rc": function () {},
        "ib": {
          "Ba": function () {}
        }
      },
      "PhoneAuthProvider": {
        "PROVIDER_ID": {},
        "credential": function () {}
      },
      "RecaptchaVerifier": {
        "Rc": function () {},
        "ib": {
          "clear": function () {},
          "render": function () {},
          "reset": function () {},
          "verify": function () {},
          "xa": function () {}
        }
      },
      "TwitterAuthProvider": {
        "PROVIDER_ID": {},
        "Rc": function () {},
        "credential": function () {},
        "ib": {
          "Ba": function () {}
        }
      }
    },
    "database": {
      "Database": {
        "ServerValue": {
          "TIMESTAMP": {
            ".sv": {}
          }
        }
      },
      "INTERNAL": {
        "dataUpdateCount": function () {},
        "forceLongPolling": function () {},
        "forceWebSockets": function () {},
        "interceptServerData": function () {},
        "isWebSocketsAvailable": function () {},
        "setSecurityDebugCallback": function () {},
        "stats": function () {},
        "statsIncrementCounter": function () {}
      },
      "Query": {
        "Le": function () {},
        "Me": function () {},
        "__referenceConstructor": {
          "Le": function () {},
          "Me": function () {},
          "__referenceConstructor": function () {},
          "xe": function () {}
        },
        "xe": function () {}
      },
      "Reference": {
        "Le": function () {},
        "Me": function () {},
        "__referenceConstructor": function () {},
        "xe": function () {}
      },
      "ServerValue": {
        "TIMESTAMP": {
          ".sv": {}
        }
      },
      "TEST_ACCESS": {
        "ConnectionTarget": function () {},
        "DataConnection": {
          "Ct": function () {},
          "Xe": {},
          "jt": {}
        },
        "RealTimeConnection": function () {},
        "forceRestClient": function () {},
        "hijackHash": function () {},
        "listens": function () {},
        "queryIdentifier": function () {}
      },
      "enableLogging": function () {}
    },
    "default": {},
    "initializeApp": function () {},
    "messaging": {
      "Messaging": function () {}
    },
    "storage": {
      "Reference": function () {},
      "Storage": function () {},
      "StringFormat": {
        "BASE64": {},
        "BASE64URL": {},
        "DATA_URL": {},
        "RAW": {}
      },
      "TaskEvent": {
        "STATE_CHANGED": {}
      },
      "TaskState": {
        "CANCELED": {},
        "ERROR": {},
        "PAUSED": {},
        "RUNNING": {},
        "SUCCESS": {}
      }
    }
  },
  "initializeApp": function () {},
  "messaging": {
    "Messaging": function () {}
  },
  "storage": {
    "Reference": function () {},
    "Storage": function () {},
    "StringFormat": {
      "BASE64": {},
      "BASE64URL": {},
      "DATA_URL": {},
      "RAW": {}
    },
    "TaskEvent": {
      "STATE_CHANGED": {}
    },
    "TaskState": {
      "CANCELED": {},
      "ERROR": {},
      "PAUSED": {},
      "RUNNING": {},
      "SUCCESS": {}
    }
  }
};
firebase.INTERNAL.ErrorFactory.prototype = {
  "create": function () {}
};
firebase.User.prototype = {
  "$": function () {},
  "B": function () {},
  "Cc": function () {},
  "Dc": function () {},
  "F": function () {},
  "Ga": function () {},
  "Ka": function () {},
  "Xa": function () {},
  "Za": function () {},
  "bb": function () {},
  "cc": function () {},
  "closure_listenable_926220": function () {},
  "constructor": function () {},
  "dc": function () {},
  "delete": function () {},
  "ec": function () {},
  "fa": function () {},
  "fc": function () {},
  "getIdToken": function () {},
  "getToken": function () {},
  "kb": function () {},
  "kc": function () {},
  "lb": function () {},
  "linkAndRetrieveDataWithCredential": function () {},
  "linkWithCredential": function () {},
  "linkWithPhoneNumber": function () {},
  "linkWithPopup": function () {},
  "linkWithRedirect": function () {},
  "mb": function () {},
  "mc": function () {},
  "na": function () {},
  "nc": function () {},
  "oa": function () {},
  "ob": function () {},
  "oc": function () {},
  "pc": function () {},
  "providerId": function () {},
  "reauthenticateAndRetrieveDataWithCredential": function () {},
  "reauthenticateWithCredential": function () {},
  "reauthenticateWithPhoneNumber": function () {},
  "reauthenticateWithPopup": function () {},
  "reauthenticateWithRedirect": function () {},
  "reload": function () {},
  "removeEventListener": function () {},
  "sendEmailVerification": function () {},
  "ta": function () {},
  "tb": function () {},
  "toJSON": function () {},
  "ub": function () {},
  "unlink": function () {},
  "updateEmail": function () {},
  "updatePassword": function () {},
  "updatePhoneNumber": function () {},
  "updateProfile": function () {},
  "va": function () {}
};
firebase.User.ib.constructor.prototype = {
  "closure_listenable_926220": function () {},
  "constructor": function () {},
  "oa": function () {},
  "removeEventListener": function () {},
  "ta": function () {}
};
firebase.app.App.prototype = {
  "auth": function () {},
  "database": function () {},
  "delete": function () {},
  "extendApp": function () {},
  "messaging": function () {},
  "name": function () {},
  "options": function () {},
  "storage": function () {},
  "t": function () {},
  "v": function () {}
};
firebase.auth.Auth.prototype = {
  "$": function () {},
  "$b": function () {},
  "Eb": function () {},
  "Ec": function () {},
  "Fb": function () {},
  "Fc": function () {},
  "Gb": function () {},
  "Ia": function () {},
  "Ka": function () {},
  "Mb": function () {},
  "Ob": function () {},
  "Rb": function () {},
  "Sa": function () {},
  "Sb": function () {},
  "Ta": function () {},
  "Tb": function () {},
  "Vb": function () {},
  "Zb": function () {},
  "aa": function () {},
  "ac": function () {},
  "addAuthTokenListener": function () {},
  "applyActionCode": function () {},
  "bc": function () {},
  "cb": function () {},
  "checkActionCode": function () {},
  "closure_listenable_926220": function () {},
  "confirmPasswordReset": function () {},
  "constructor": function () {},
  "createUserAndRetrieveDataWithEmailAndPassword": function () {},
  "createUserWithEmailAndPassword": function () {},
  "delete": function () {},
  "eb": function () {},
  "fa": function () {},
  "fb": function () {},
  "fetchProvidersForEmail": function () {},
  "gb": function () {},
  "gc": function () {},
  "getRedirectResult": function () {},
  "getUid": function () {},
  "hb": function () {},
  "hc": function () {},
  "ic": function () {},
  "ka": function () {},
  "languageCode": function () {},
  "na": function () {},
  "oa": function () {},
  "ob": function () {},
  "onAuthStateChanged": function () {},
  "onIdTokenChanged": function () {},
  "qb": function () {},
  "qc": function () {},
  "removeAuthTokenListener": function () {},
  "removeEventListener": function () {},
  "sc": function () {},
  "sendPasswordResetEmail": function () {},
  "setPersistence": function () {},
  "signInAndRetrieveDataWithCredential": function () {},
  "signInAndRetrieveDataWithCustomToken": function () {},
  "signInAndRetrieveDataWithEmailAndPassword": function () {},
  "signInAnonymously": function () {},
  "signInAnonymouslyAndRetrieveData": function () {},
  "signInWithCredential": function () {},
  "signInWithCustomToken": function () {},
  "signInWithEmailAndPassword": function () {},
  "signInWithPhoneNumber": function () {},
  "signInWithPopup": function () {},
  "signInWithRedirect": function () {},
  "signOut": function () {},
  "ta": function () {},
  "tc": function () {},
  "toJSON": function () {},
  "uc": function () {},
  "useDeviceLanguage": function () {},
  "va": function () {},
  "vc": function () {},
  "verifyPasswordResetCode": function () {},
  "wc": function () {},
  "xc": function () {},
  "yc": function () {}
};
firebase.auth.Auth.ib.constructor.prototype = {
  "closure_listenable_926220": function () {},
  "constructor": function () {},
  "oa": function () {},
  "removeEventListener": function () {},
  "ta": function () {}
};
firebase.auth.Error.prototype = {
  "B": function () {},
  "constructor": function () {},
  "toJSON": function () {}
};
firebase.auth.FacebookAuthProvider.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.auth.FacebookAuthProvider.ib.constructor.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "constructor": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.auth.GithubAuthProvider.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.auth.GithubAuthProvider.ib.constructor.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "constructor": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.auth.GoogleAuthProvider.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.auth.GoogleAuthProvider.ib.constructor.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "constructor": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.auth.OAuthProvider.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.auth.PhoneAuthProvider.prototype = {
  "Qa": function () {},
  "verifyPhoneNumber": function () {}
};
firebase.auth.RecaptchaVerifier.prototype = {
  "clear": function () {},
  "render": function () {},
  "reset": function () {},
  "verify": function () {},
  "xa": function () {}
};
firebase.auth.TwitterAuthProvider.prototype = {
  "Ba": function () {},
  "setCustomParameters": function () {}
};
firebase.database.Database.prototype = {
  "Re": function () {},
  "app": function () {},
  "goOffline": function () {},
  "goOnline": function () {},
  "ref": function () {},
  "refFromURL": function () {}
};
firebase.database.Query.prototype = {
  "Fe": function () {},
  "endAt": function () {},
  "equalTo": function () {},
  "getQueryParams": function () {},
  "getRef": function () {},
  "isEqual": function () {},
  "limitToFirst": function () {},
  "limitToLast": function () {},
  "off": function () {},
  "on": function () {},
  "onChildEvent": function () {},
  "onValueEvent": function () {},
  "once": function () {},
  "orderByChild": function () {},
  "orderByKey": function () {},
  "orderByPriority": function () {},
  "orderByValue": function () {},
  "queryIdentifier": function () {},
  "queryObject": function () {},
  "ref": function () {},
  "startAt": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
firebase.database.Query.__referenceConstructor.prototype = {
  "Fe": function () {},
  "child": function () {},
  "constructor": function () {},
  "database": function () {},
  "databaseProp": function () {},
  "endAt": function () {},
  "equalTo": function () {},
  "getKey": function () {},
  "getParent": function () {},
  "getQueryParams": function () {},
  "getRef": function () {},
  "getRoot": function () {},
  "isEqual": function () {},
  "key": function () {},
  "limitToFirst": function () {},
  "limitToLast": function () {},
  "off": function () {},
  "on": function () {},
  "onChildEvent": function () {},
  "onDisconnect": function () {},
  "onValueEvent": function () {},
  "once": function () {},
  "orderByChild": function () {},
  "orderByKey": function () {},
  "orderByPriority": function () {},
  "orderByValue": function () {},
  "parent": function () {},
  "push": function () {},
  "queryIdentifier": function () {},
  "queryObject": function () {},
  "ref": function () {},
  "remove": function () {},
  "root": function () {},
  "set": function () {},
  "setPriority": function () {},
  "setWithPriority": function () {},
  "startAt": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "transaction": function () {},
  "update": function () {}
};
firebase.database.Reference.prototype = {
  "Fe": function () {},
  "child": function () {},
  "constructor": function () {},
  "database": function () {},
  "databaseProp": function () {},
  "endAt": function () {},
  "equalTo": function () {},
  "getKey": function () {},
  "getParent": function () {},
  "getQueryParams": function () {},
  "getRef": function () {},
  "getRoot": function () {},
  "isEqual": function () {},
  "key": function () {},
  "limitToFirst": function () {},
  "limitToLast": function () {},
  "off": function () {},
  "on": function () {},
  "onChildEvent": function () {},
  "onDisconnect": function () {},
  "onValueEvent": function () {},
  "once": function () {},
  "orderByChild": function () {},
  "orderByKey": function () {},
  "orderByPriority": function () {},
  "orderByValue": function () {},
  "parent": function () {},
  "push": function () {},
  "queryIdentifier": function () {},
  "queryObject": function () {},
  "ref": function () {},
  "remove": function () {},
  "root": function () {},
  "set": function () {},
  "setPriority": function () {},
  "setWithPriority": function () {},
  "startAt": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "transaction": function () {},
  "update": function () {}
};
firebase.database.TEST_ACCESS.ConnectionTarget.prototype = {
  "connectionURL": function () {},
  "isCacheableHost": function () {},
  "isCustomHost": function () {},
  "isDemoHost": function () {},
  "needsQueryParam": function () {},
  "toString": function () {},
  "toURLString": function () {},
  "updateHost": function () {}
};
firebase.database.TEST_ACCESS.DataConnection.prototype = {
  "At": function () {},
  "Dt": function () {},
  "Et": function () {},
  "Ft": function () {},
  "It": function () {},
  "Lt": function () {},
  "Mt": function () {},
  "Nt": function () {},
  "Ot": function () {},
  "Pt": function () {},
  "Rt": function () {},
  "St": function () {},
  "Tt": function () {},
  "Wt": function () {},
  "bt": function () {},
  "constructor": function () {},
  "echo": function () {},
  "gt": function () {},
  "interrupt": function () {},
  "kt": function () {},
  "listen": function () {},
  "merge": function () {},
  "mt": function () {},
  "onDisconnectCancel": function () {},
  "onDisconnectMerge": function () {},
  "onDisconnectPut": function () {},
  "put": function () {},
  "putInternal": function () {},
  "refreshAuthToken": function () {},
  "reportStats": function () {},
  "resume": function () {},
  "sendRequest": function () {},
  "simpleListen": function () {},
  "tryAuth": function () {},
  "unlisten": function () {},
  "vt": function () {},
  "wt": function () {},
  "xt": function () {},
  "yt": function () {}
};
firebase.database.TEST_ACCESS.RealTimeConnection.prototype = {
  "$t": function () {},
  "Cn": function () {},
  "En": function () {},
  "Jt": function () {},
  "Kt": function () {},
  "Nn": function () {},
  "Pn": function () {},
  "Xt": function () {},
  "_n": function () {},
  "an": function () {},
  "close": function () {},
  "cn": function () {},
  "dn": function () {},
  "fn": function () {},
  "gn": function () {},
  "hn": function () {},
  "in": function () {},
  "ln": function () {},
  "mn": function () {},
  "sendRequest": function () {},
  "sn": function () {},
  "tryCleanupConnection": function () {},
  "un": function () {},
  "vn": function () {},
  "wt": function () {},
  "yn": function () {}
};
firebase.default.INTERNAL.ErrorFactory.prototype = {
  "create": function () {}
};
firebase.default.User.prototype = {
  "$": function () {},
  "B": function () {},
  "Cc": function () {},
  "Dc": function () {},
  "F": function () {},
  "Ga": function () {},
  "Ka": function () {},
  "Xa": function () {},
  "Za": function () {},
  "bb": function () {},
  "cc": function () {},
  "closure_listenable_926220": function () {},
  "constructor": function () {},
  "dc": function () {},
  "delete": function () {},
  "ec": function () {},
  "fa": function () {},
  "fc": function () {},
  "getIdToken": function () {},
  "getToken": function () {},
  "kb": function () {},
  "kc": function () {},
  "lb": function () {},
  "linkAndRetrieveDataWithCredential": function () {},
  "linkWithCredential": function () {},
  "linkWithPhoneNumber": function () {},
  "linkWithPopup": function () {},
  "linkWithRedirect": function () {},
  "mb": function () {},
  "mc": function () {},
  "na": function () {},
  "nc": function () {},
  "oa": function () {},
  "ob": function () {},
  "oc": function () {},
  "pc": function () {},
  "providerId": function () {},
  "reauthenticateAndRetrieveDataWithCredential": function () {},
  "reauthenticateWithCredential": function () {},
  "reauthenticateWithPhoneNumber": function () {},
  "reauthenticateWithPopup": function () {},
  "reauthenticateWithRedirect": function () {},
  "reload": function () {},
  "removeEventListener": function () {},
  "sendEmailVerification": function () {},
  "ta": function () {},
  "tb": function () {},
  "toJSON": function () {},
  "ub": function () {},
  "unlink": function () {},
  "updateEmail": function () {},
  "updatePassword": function () {},
  "updatePhoneNumber": function () {},
  "updateProfile": function () {},
  "va": function () {}
};
firebase.default.User.ib.constructor.prototype = {
  "closure_listenable_926220": function () {},
  "constructor": function () {},
  "oa": function () {},
  "removeEventListener": function () {},
  "ta": function () {}
};
firebase.default.app.App.prototype = {
  "auth": function () {},
  "database": function () {},
  "delete": function () {},
  "extendApp": function () {},
  "messaging": function () {},
  "name": function () {},
  "options": function () {},
  "storage": function () {},
  "t": function () {},
  "v": function () {}
};
firebase.default.auth.Auth.prototype = {
  "$": function () {},
  "$b": function () {},
  "Eb": function () {},
  "Ec": function () {},
  "Fb": function () {},
  "Fc": function () {},
  "Gb": function () {},
  "Ia": function () {},
  "Ka": function () {},
  "Mb": function () {},
  "Ob": function () {},
  "Rb": function () {},
  "Sa": function () {},
  "Sb": function () {},
  "Ta": function () {},
  "Tb": function () {},
  "Vb": function () {},
  "Zb": function () {},
  "aa": function () {},
  "ac": function () {},
  "addAuthTokenListener": function () {},
  "applyActionCode": function () {},
  "bc": function () {},
  "cb": function () {},
  "checkActionCode": function () {},
  "closure_listenable_926220": function () {},
  "confirmPasswordReset": function () {},
  "constructor": function () {},
  "createUserAndRetrieveDataWithEmailAndPassword": function () {},
  "createUserWithEmailAndPassword": function () {},
  "delete": function () {},
  "eb": function () {},
  "fa": function () {},
  "fb": function () {},
  "fetchProvidersForEmail": function () {},
  "gb": function () {},
  "gc": function () {},
  "getRedirectResult": function () {},
  "getUid": function () {},
  "hb": function () {},
  "hc": function () {},
  "ic": function () {},
  "ka": function () {},
  "languageCode": function () {},
  "na": function () {},
  "oa": function () {},
  "ob": function () {},
  "onAuthStateChanged": function () {},
  "onIdTokenChanged": function () {},
  "qb": function () {},
  "qc": function () {},
  "removeAuthTokenListener": function () {},
  "removeEventListener": function () {},
  "sc": function () {},
  "sendPasswordResetEmail": function () {},
  "setPersistence": function () {},
  "signInAndRetrieveDataWithCredential": function () {},
  "signInAndRetrieveDataWithCustomToken": function () {},
  "signInAndRetrieveDataWithEmailAndPassword": function () {},
  "signInAnonymously": function () {},
  "signInAnonymouslyAndRetrieveData": function () {},
  "signInWithCredential": function () {},
  "signInWithCustomToken": function () {},
  "signInWithEmailAndPassword": function () {},
  "signInWithPhoneNumber": function () {},
  "signInWithPopup": function () {},
  "signInWithRedirect": function () {},
  "signOut": function () {},
  "ta": function () {},
  "tc": function () {},
  "toJSON": function () {},
  "uc": function () {},
  "useDeviceLanguage": function () {},
  "va": function () {},
  "vc": function () {},
  "verifyPasswordResetCode": function () {},
  "wc": function () {},
  "xc": function () {},
  "yc": function () {}
};
firebase.default.auth.Auth.ib.constructor.prototype = {
  "closure_listenable_926220": function () {},
  "constructor": function () {},
  "oa": function () {},
  "removeEventListener": function () {},
  "ta": function () {}
};
firebase.default.auth.Error.prototype = {
  "B": function () {},
  "constructor": function () {},
  "toJSON": function () {}
};
firebase.default.auth.FacebookAuthProvider.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.default.auth.FacebookAuthProvider.ib.constructor.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "constructor": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.default.auth.GithubAuthProvider.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.default.auth.GithubAuthProvider.ib.constructor.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "constructor": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.default.auth.GoogleAuthProvider.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.default.auth.GoogleAuthProvider.ib.constructor.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "constructor": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.default.auth.OAuthProvider.prototype = {
  "Ba": function () {},
  "addScope": function () {},
  "credential": function () {},
  "sa": function () {},
  "setCustomParameters": function () {},
  "wb": function () {}
};
firebase.default.auth.PhoneAuthProvider.prototype = {
  "Qa": function () {},
  "verifyPhoneNumber": function () {}
};
firebase.default.auth.RecaptchaVerifier.prototype = {
  "clear": function () {},
  "render": function () {},
  "reset": function () {},
  "verify": function () {},
  "xa": function () {}
};
firebase.default.auth.TwitterAuthProvider.prototype = {
  "Ba": function () {},
  "setCustomParameters": function () {}
};
firebase.default.database.Database.prototype = {
  "Re": function () {},
  "app": function () {},
  "goOffline": function () {},
  "goOnline": function () {},
  "ref": function () {},
  "refFromURL": function () {}
};
firebase.default.database.Query.prototype = {
  "Fe": function () {},
  "endAt": function () {},
  "equalTo": function () {},
  "getQueryParams": function () {},
  "getRef": function () {},
  "isEqual": function () {},
  "limitToFirst": function () {},
  "limitToLast": function () {},
  "off": function () {},
  "on": function () {},
  "onChildEvent": function () {},
  "onValueEvent": function () {},
  "once": function () {},
  "orderByChild": function () {},
  "orderByKey": function () {},
  "orderByPriority": function () {},
  "orderByValue": function () {},
  "queryIdentifier": function () {},
  "queryObject": function () {},
  "ref": function () {},
  "startAt": function () {},
  "toJSON": function () {},
  "toString": function () {}
};
firebase.default.database.Query.__referenceConstructor.prototype = {
  "Fe": function () {},
  "child": function () {},
  "constructor": function () {},
  "database": function () {},
  "databaseProp": function () {},
  "endAt": function () {},
  "equalTo": function () {},
  "getKey": function () {},
  "getParent": function () {},
  "getQueryParams": function () {},
  "getRef": function () {},
  "getRoot": function () {},
  "isEqual": function () {},
  "key": function () {},
  "limitToFirst": function () {},
  "limitToLast": function () {},
  "off": function () {},
  "on": function () {},
  "onChildEvent": function () {},
  "onDisconnect": function () {},
  "onValueEvent": function () {},
  "once": function () {},
  "orderByChild": function () {},
  "orderByKey": function () {},
  "orderByPriority": function () {},
  "orderByValue": function () {},
  "parent": function () {},
  "push": function () {},
  "queryIdentifier": function () {},
  "queryObject": function () {},
  "ref": function () {},
  "remove": function () {},
  "root": function () {},
  "set": function () {},
  "setPriority": function () {},
  "setWithPriority": function () {},
  "startAt": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "transaction": function () {},
  "update": function () {}
};
firebase.default.database.Reference.prototype = {
  "Fe": function () {},
  "child": function () {},
  "constructor": function () {},
  "database": function () {},
  "databaseProp": function () {},
  "endAt": function () {},
  "equalTo": function () {},
  "getKey": function () {},
  "getParent": function () {},
  "getQueryParams": function () {},
  "getRef": function () {},
  "getRoot": function () {},
  "isEqual": function () {},
  "key": function () {},
  "limitToFirst": function () {},
  "limitToLast": function () {},
  "off": function () {},
  "on": function () {},
  "onChildEvent": function () {},
  "onDisconnect": function () {},
  "onValueEvent": function () {},
  "once": function () {},
  "orderByChild": function () {},
  "orderByKey": function () {},
  "orderByPriority": function () {},
  "orderByValue": function () {},
  "parent": function () {},
  "push": function () {},
  "queryIdentifier": function () {},
  "queryObject": function () {},
  "ref": function () {},
  "remove": function () {},
  "root": function () {},
  "set": function () {},
  "setPriority": function () {},
  "setWithPriority": function () {},
  "startAt": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "transaction": function () {},
  "update": function () {}
};
firebase.default.database.TEST_ACCESS.ConnectionTarget.prototype = {
  "connectionURL": function () {},
  "isCacheableHost": function () {},
  "isCustomHost": function () {},
  "isDemoHost": function () {},
  "needsQueryParam": function () {},
  "toString": function () {},
  "toURLString": function () {},
  "updateHost": function () {}
};
firebase.default.database.TEST_ACCESS.DataConnection.prototype = {
  "At": function () {},
  "Dt": function () {},
  "Et": function () {},
  "Ft": function () {},
  "It": function () {},
  "Lt": function () {},
  "Mt": function () {},
  "Nt": function () {},
  "Ot": function () {},
  "Pt": function () {},
  "Rt": function () {},
  "St": function () {},
  "Tt": function () {},
  "Wt": function () {},
  "bt": function () {},
  "constructor": function () {},
  "echo": function () {},
  "gt": function () {},
  "interrupt": function () {},
  "kt": function () {},
  "listen": function () {},
  "merge": function () {},
  "mt": function () {},
  "onDisconnectCancel": function () {},
  "onDisconnectMerge": function () {},
  "onDisconnectPut": function () {},
  "put": function () {},
  "putInternal": function () {},
  "refreshAuthToken": function () {},
  "reportStats": function () {},
  "resume": function () {},
  "sendRequest": function () {},
  "simpleListen": function () {},
  "tryAuth": function () {},
  "unlisten": function () {},
  "vt": function () {},
  "wt": function () {},
  "xt": function () {},
  "yt": function () {}
};
firebase.default.database.TEST_ACCESS.RealTimeConnection.prototype = {
  "$t": function () {},
  "Cn": function () {},
  "En": function () {},
  "Jt": function () {},
  "Kt": function () {},
  "Nn": function () {},
  "Pn": function () {},
  "Xt": function () {},
  "_n": function () {},
  "an": function () {},
  "close": function () {},
  "cn": function () {},
  "dn": function () {},
  "fn": function () {},
  "gn": function () {},
  "hn": function () {},
  "in": function () {},
  "ln": function () {},
  "mn": function () {},
  "sendRequest": function () {},
  "sn": function () {},
  "tryCleanupConnection": function () {},
  "un": function () {},
  "vn": function () {},
  "wt": function () {},
  "yn": function () {}
};
firebase.default.messaging.Messaging.prototype = {
  "T": function () {},
  "_": function () {},
  "constructor": function () {},
  "delete": function () {},
  "deleteToken": function () {},
  "g": function () {},
  "getToken": function () {},
  "getTokenManager": function () {},
  "l": function () {},
  "onMessage": function () {},
  "onTokenRefresh": function () {},
  "requestPermission": function () {},
  "setBackgroundMessageHandler": function () {},
  "u": function () {},
  "useServiceWorker": function () {},
  "v": function () {}
};
firebase.default.storage.Reference.prototype = {
  "Y": function () {},
  "bucket": function () {},
  "child": function () {},
  "delete": function () {},
  "fullPath": function () {},
  "getDownloadURL": function () {},
  "getMetadata": function () {},
  "mappings": function () {},
  "name": function () {},
  "newRef": function () {},
  "parent": function () {},
  "put": function () {},
  "putString": function () {},
  "root": function () {},
  "storage": function () {},
  "toString": function () {},
  "updateMetadata": function () {}
};
firebase.default.storage.Storage.prototype = {
  "INTERNAL": function () {},
  "app": function () {},
  "maxOperationRetryTime": function () {},
  "maxUploadRetryTime": function () {},
  "ref": function () {},
  "refFromURL": function () {},
  "setMaxOperationRetryTime": function () {},
  "setMaxUploadRetryTime": function () {}
};
firebase.messaging.Messaging.prototype = {
  "T": function () {},
  "_": function () {},
  "constructor": function () {},
  "delete": function () {},
  "deleteToken": function () {},
  "g": function () {},
  "getToken": function () {},
  "getTokenManager": function () {},
  "l": function () {},
  "onMessage": function () {},
  "onTokenRefresh": function () {},
  "requestPermission": function () {},
  "setBackgroundMessageHandler": function () {},
  "u": function () {},
  "useServiceWorker": function () {},
  "v": function () {}
};
firebase.storage.Reference.prototype = {
  "Y": function () {},
  "bucket": function () {},
  "child": function () {},
  "delete": function () {},
  "fullPath": function () {},
  "getDownloadURL": function () {},
  "getMetadata": function () {},
  "mappings": function () {},
  "name": function () {},
  "newRef": function () {},
  "parent": function () {},
  "put": function () {},
  "putString": function () {},
  "root": function () {},
  "storage": function () {},
  "toString": function () {},
  "updateMetadata": function () {}
};
firebase.storage.Storage.prototype = {
  "INTERNAL": function () {},
  "app": function () {},
  "maxOperationRetryTime": function () {},
  "maxUploadRetryTime": function () {},
  "ref": function () {},
  "refFromURL": function () {},
  "setMaxOperationRetryTime": function () {},
  "setMaxUploadRetryTime": function () {}
};
/**********************************************************************
 * End Generated Extern for firebase
/**********************************************************************/

/**********************************************************************
 * Extern for Chart
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var Chart = {
  "Animation": {
    "__super__": {
      "hasValue": function () {},
      "initialize": function () {},
      "pivot": function () {},
      "tooltipPosition": function () {},
      "transition": function () {}
    },
    "extend": function () {}
  },
  "Bar": function () {},
  "Bubble": function () {},
  "Chart": {
    "Animation": {
      "__super__": {
        "hasValue": function () {},
        "initialize": function () {},
        "pivot": function () {},
        "tooltipPosition": function () {},
        "transition": function () {}
      },
      "extend": function () {}
    },
    "Bar": function () {},
    "Bubble": function () {},
    "Chart": function () {},
    "Controller": function () {},
    "DatasetController": {
      "extend": function () {}
    },
    "Doughnut": function () {},
    "Element": {
      "extend": function () {}
    },
    "Interaction": {
      "modes": {
        "dataset": function () {},
        "index": function () {},
        "label": function () {},
        "nearest": function () {},
        "point": function () {},
        "single": function () {},
        "x": function () {},
        "x-axis": function () {},
        "y": function () {}
      }
    },
    "Legend": {
      "__super__": {
        "hasValue": function () {},
        "initialize": function () {},
        "pivot": function () {},
        "tooltipPosition": function () {},
        "transition": function () {}
      },
      "extend": function () {}
    },
    "Line": function () {},
    "LinearScaleBase": {
      "__super__": {
        "_autoSkip": function () {},
        "afterBuildTicks": function () {},
        "afterCalculateTickRotation": function () {},
        "afterDataLimits": function () {},
        "afterFit": function () {},
        "afterSetDimensions": function () {},
        "afterTickToLabelConversion": function () {},
        "afterUpdate": function () {},
        "beforeBuildTicks": function () {},
        "beforeCalculateTickRotation": function () {},
        "beforeDataLimits": function () {},
        "beforeFit": function () {},
        "beforeSetDimensions": function () {},
        "beforeTickToLabelConversion": function () {},
        "beforeUpdate": function () {},
        "buildTicks": function () {},
        "calculateTickRotation": function () {},
        "constructor": {
          "__super__": {
            "hasValue": function () {},
            "initialize": function () {},
            "pivot": function () {},
            "tooltipPosition": function () {},
            "transition": function () {}
          },
          "extend": function () {}
        },
        "convertTicksToLabels": function () {},
        "determineDataLimits": function () {},
        "draw": function () {},
        "fit": function () {},
        "getBasePixel": function () {},
        "getBaseValue": function () {},
        "getLabelForIndex": function () {},
        "getPadding": function () {},
        "getPixelForDecimal": function () {},
        "getPixelForTick": function () {},
        "getPixelForValue": function () {},
        "getRightValue": function () {},
        "getTicks": function () {},
        "getValueForPixel": function () {},
        "handleMargins": function () {},
        "hasValue": function () {},
        "initialize": function () {},
        "isFullWidth": function () {},
        "isHorizontal": function () {},
        "mergeTicksOptions": function () {},
        "pivot": function () {},
        "setDimensions": function () {},
        "tooltipPosition": function () {},
        "transition": function () {},
        "update": function () {}
      },
      "extend": function () {}
    },
    "PluginBase": {
      "__super__": {
        "hasValue": function () {},
        "initialize": function () {},
        "pivot": function () {},
        "tooltipPosition": function () {},
        "transition": function () {}
      },
      "extend": function () {}
    },
    "PolarArea": function () {},
    "Radar": function () {},
    "Scale": {
      "__super__": {
        "hasValue": function () {},
        "initialize": function () {},
        "pivot": function () {},
        "tooltipPosition": function () {},
        "transition": function () {}
      },
      "extend": function () {}
    },
    "Scatter": function () {},
    "Title": {
      "__super__": {
        "hasValue": function () {},
        "initialize": function () {},
        "pivot": function () {},
        "tooltipPosition": function () {},
        "transition": function () {}
      },
      "extend": function () {}
    },
    "Tooltip": {
      "__super__": {
        "hasValue": function () {},
        "initialize": function () {},
        "pivot": function () {},
        "tooltipPosition": function () {},
        "transition": function () {}
      },
      "extend": function () {},
      "positioners": {
        "average": function () {},
        "nearest": function () {}
      }
    },
    "animationService": {
      "addAnimation": function () {},
      "advance": function () {},
      "animations": {},
      "cancelAnimation": function () {},
      "dropFrames": {},
      "frameDuration": {},
      "request": {},
      "requestAnimationFrame": function () {},
      "startDigest": function () {}
    },
    "canvasHelpers": {
      "clear": function () {},
      "clipArea": function () {},
      "drawPoint": function () {},
      "lineTo": function () {},
      "roundedRect": function () {},
      "unclipArea": function () {}
    },
    "controllers": {
      "bar": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      },
      "bubble": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      },
      "doughnut": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      },
      "horizontalBar": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "calculateBarIndexPixels": function () {},
          "calculateBarValuePixels": function () {},
          "constructor": {
            "__super__": {
              "addElementAndReset": function () {},
              "addElements": function () {},
              "buildOrUpdateElements": function () {},
              "createMetaData": function () {},
              "createMetaDataset": function () {},
              "dataElementType": {},
              "datasetElementType": {},
              "destroy": function () {},
              "draw": function () {},
              "getDataset": function () {},
              "getMeta": function () {},
              "getScaleForId": function () {},
              "initialize": function () {},
              "insertElements": function () {},
              "linkScales": function () {},
              "onDataPop": function () {},
              "onDataPush": function () {},
              "onDataShift": function () {},
              "onDataSplice": function () {},
              "onDataUnshift": function () {},
              "removeHoverStyle": function () {},
              "reset": function () {},
              "resyncElements": function () {},
              "setHoverStyle": function () {},
              "transition": function () {},
              "update": function () {},
              "updateIndex": function () {}
            },
            "extend": function () {}
          },
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {
            "__super__": {
              "hasValue": function () {},
              "initialize": function () {},
              "pivot": function () {},
              "tooltipPosition": function () {},
              "transition": function () {}
            },
            "extend": function () {}
          },
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getIndexScale": function () {},
          "getIndexScaleId": function () {},
          "getMeta": function () {},
          "getRuler": function () {},
          "getScaleForId": function () {},
          "getStackCount": function () {},
          "getStackIndex": function () {},
          "getValueScale": function () {},
          "getValueScaleId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateElement": function () {},
          "updateElementGeometry": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      },
      "line": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      },
      "pie": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      },
      "polarArea": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      },
      "radar": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      },
      "scatter": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": function () {}
      }
    },
    "defaults": {
      "_set": function () {},
      "bar": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        }
      },
      "bubble": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      },
      "doughnut": {
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "circumference": {},
        "cutoutPercentage": {},
        "hover": {
          "mode": {}
        },
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "legendCallback": function () {},
        "rotation": {},
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      },
      "global": {
        "animation": {
          "duration": {},
          "easing": {},
          "onComplete": function () {},
          "onProgress": function () {}
        },
        "defaultColor": {},
        "defaultFontColor": {},
        "defaultFontFamily": {},
        "defaultFontSize": {},
        "defaultFontStyle": {},
        "elements": {
          "arc": {
            "backgroundColor": {},
            "borderColor": {},
            "borderWidth": {}
          },
          "line": {
            "backgroundColor": {},
            "borderCapStyle": {},
            "borderColor": {},
            "borderDash": {},
            "borderDashOffset": {},
            "borderJoinStyle": {},
            "borderWidth": {},
            "capBezierPoints": {},
            "fill": {},
            "tension": {}
          },
          "point": {
            "backgroundColor": {},
            "borderColor": {},
            "borderWidth": {},
            "hitRadius": {},
            "hoverBorderWidth": {},
            "hoverRadius": {},
            "pointStyle": {},
            "radius": {}
          },
          "rectangle": {
            "backgroundColor": {},
            "borderColor": {},
            "borderSkipped": {},
            "borderWidth": {}
          }
        },
        "events": {},
        "hover": {
          "animationDuration": {},
          "intersect": {},
          "mode": {},
          "onHover": {}
        },
        "layout": {
          "padding": {
            "bottom": {},
            "left": {},
            "right": {},
            "top": {}
          }
        },
        "legend": {
          "display": {},
          "fullWidth": {},
          "labels": {
            "boxWidth": {},
            "generateLabels": function () {},
            "padding": {}
          },
          "onClick": function () {},
          "onHover": {},
          "position": {},
          "reverse": {},
          "weight": {}
        },
        "legendCallback": function () {},
        "maintainAspectRatio": {},
        "onClick": {},
        "plugins": {
          "filler": {
            "propagate": {}
          }
        },
        "responsive": {},
        "responsiveAnimationDuration": {},
        "showLines": {},
        "title": {
          "display": {},
          "fontStyle": {},
          "fullWidth": {},
          "lineHeight": {},
          "padding": {},
          "position": {},
          "text": {},
          "weight": {}
        },
        "tooltips": {
          "backgroundColor": {},
          "bodyAlign": {},
          "bodyFontColor": {},
          "bodySpacing": {},
          "borderColor": {},
          "borderWidth": {},
          "callbacks": {
            "afterBody": function () {},
            "afterFooter": function () {},
            "afterLabel": function () {},
            "afterTitle": function () {},
            "beforeBody": function () {},
            "beforeFooter": function () {},
            "beforeLabel": function () {},
            "beforeTitle": function () {},
            "footer": function () {},
            "label": function () {},
            "labelColor": function () {},
            "labelTextColor": function () {},
            "title": function () {}
          },
          "caretPadding": {},
          "caretSize": {},
          "cornerRadius": {},
          "custom": {},
          "displayColors": {},
          "enabled": {},
          "footerAlign": {},
          "footerFontColor": {},
          "footerFontStyle": {},
          "footerMarginTop": {},
          "footerSpacing": {},
          "intersect": {},
          "mode": {},
          "multiKeyBackground": {},
          "position": {},
          "titleAlign": {},
          "titleFontColor": {},
          "titleFontStyle": {},
          "titleMarginBottom": {},
          "titleSpacing": {},
          "xPadding": {},
          "yPadding": {}
        }
      },
      "horizontalBar": {
        "elements": {
          "rectangle": {
            "borderSkipped": {}
          }
        },
        "hover": {
          "axis": {},
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "tooltips": {
          "axis": {},
          "callbacks": {
            "label": function () {},
            "title": function () {}
          },
          "mode": {}
        }
      },
      "line": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "showLines": {},
        "spanGaps": {}
      },
      "pie": {
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "circumference": {},
        "cutoutPercentage": {},
        "hover": {
          "mode": {}
        },
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "legendCallback": function () {},
        "rotation": {},
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      },
      "polarArea": {
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "legendCallback": function () {},
        "scale": {
          "angleLines": {
            "display": {}
          },
          "gridLines": {
            "circular": {}
          },
          "pointLabels": {
            "display": {}
          },
          "ticks": {
            "beginAtZero": {}
          },
          "type": {}
        },
        "startAngle": {},
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      },
      "radar": {
        "elements": {
          "line": {
            "tension": {}
          }
        },
        "scale": {
          "type": {}
        }
      },
      "scale": {
        "display": {},
        "gridLines": {
          "borderDash": {},
          "borderDashOffset": {},
          "color": {},
          "display": {},
          "drawBorder": {},
          "drawOnChartArea": {},
          "drawTicks": {},
          "lineWidth": {},
          "offsetGridLines": {},
          "tickMarkLength": {},
          "zeroLineBorderDash": {},
          "zeroLineBorderDashOffset": {},
          "zeroLineColor": {},
          "zeroLineWidth": {}
        },
        "offset": {},
        "position": {},
        "scaleLabel": {
          "display": {},
          "labelString": {},
          "lineHeight": {},
          "padding": {
            "bottom": {},
            "top": {}
          }
        },
        "ticks": {
          "autoSkip": {},
          "autoSkipPadding": {},
          "beginAtZero": {},
          "callback": function () {},
          "display": {},
          "labelOffset": {},
          "major": {},
          "maxRotation": {},
          "minRotation": {},
          "minor": {},
          "mirror": {},
          "padding": {},
          "reverse": {}
        }
      },
      "scatter": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "showLines": {},
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      }
    },
    "elements": {
      "Arc": {
        "__super__": {
          "hasValue": function () {},
          "initialize": function () {},
          "pivot": function () {},
          "tooltipPosition": function () {},
          "transition": function () {}
        },
        "extend": function () {}
      },
      "Line": {
        "__super__": {
          "hasValue": function () {},
          "initialize": function () {},
          "pivot": function () {},
          "tooltipPosition": function () {},
          "transition": function () {}
        },
        "extend": function () {}
      },
      "Point": {
        "__super__": {
          "hasValue": function () {},
          "initialize": function () {},
          "pivot": function () {},
          "tooltipPosition": function () {},
          "transition": function () {}
        },
        "extend": function () {}
      },
      "Rectangle": {
        "__super__": {
          "hasValue": function () {},
          "initialize": function () {},
          "pivot": function () {},
          "tooltipPosition": function () {},
          "transition": function () {}
        },
        "extend": function () {}
      }
    },
    "helpers": {
      "EPSILON": {},
      "_merger": function () {},
      "_mergerIf": function () {},
      "addEvent": function () {},
      "aliasPixel": function () {},
      "almostEquals": function () {},
      "almostWhole": function () {},
      "arrayEquals": function () {},
      "callCallback": function () {},
      "callback": function () {},
      "canvas": {
        "clear": function () {},
        "clipArea": function () {},
        "drawPoint": function () {},
        "lineTo": function () {},
        "roundedRect": function () {},
        "unclipArea": function () {}
      },
      "clear": function () {},
      "clone": function () {},
      "color": function () {},
      "configMerge": function () {},
      "distanceBetweenPoints": function () {},
      "drawRoundedRectangle": function () {},
      "each": function () {},
      "easing": {
        "effects": {
          "easeInBack": function () {},
          "easeInBounce": function () {},
          "easeInCirc": function () {},
          "easeInCubic": function () {},
          "easeInElastic": function () {},
          "easeInExpo": function () {},
          "easeInOutBack": function () {},
          "easeInOutBounce": function () {},
          "easeInOutCirc": function () {},
          "easeInOutCubic": function () {},
          "easeInOutElastic": function () {},
          "easeInOutExpo": function () {},
          "easeInOutQuad": function () {},
          "easeInOutQuart": function () {},
          "easeInOutQuint": function () {},
          "easeInOutSine": function () {},
          "easeInQuad": function () {},
          "easeInQuart": function () {},
          "easeInQuint": function () {},
          "easeInSine": function () {},
          "easeOutBack": function () {},
          "easeOutBounce": function () {},
          "easeOutCirc": function () {},
          "easeOutCubic": function () {},
          "easeOutElastic": function () {},
          "easeOutExpo": function () {},
          "easeOutQuad": function () {},
          "easeOutQuart": function () {},
          "easeOutQuint": function () {},
          "easeOutSine": function () {},
          "linear": function () {}
        }
      },
      "easingEffects": {
        "easeInBack": function () {},
        "easeInBounce": function () {},
        "easeInCirc": function () {},
        "easeInCubic": function () {},
        "easeInElastic": function () {},
        "easeInExpo": function () {},
        "easeInOutBack": function () {},
        "easeInOutBounce": function () {},
        "easeInOutCirc": function () {},
        "easeInOutCubic": function () {},
        "easeInOutElastic": function () {},
        "easeInOutExpo": function () {},
        "easeInOutQuad": function () {},
        "easeInOutQuart": function () {},
        "easeInOutQuint": function () {},
        "easeInOutSine": function () {},
        "easeInQuad": function () {},
        "easeInQuart": function () {},
        "easeInQuint": function () {},
        "easeInSine": function () {},
        "easeOutBack": function () {},
        "easeOutBounce": function () {},
        "easeOutCirc": function () {},
        "easeOutCubic": function () {},
        "easeOutElastic": function () {},
        "easeOutExpo": function () {},
        "easeOutQuad": function () {},
        "easeOutQuart": function () {},
        "easeOutQuint": function () {},
        "easeOutSine": function () {},
        "linear": function () {}
      },
      "extend": function () {},
      "findIndex": function () {},
      "findNextWhere": function () {},
      "findPreviousWhere": function () {},
      "fontString": function () {},
      "getAngleFromPoint": function () {},
      "getConstraintHeight": function () {},
      "getConstraintWidth": function () {},
      "getHoverColor": function () {},
      "getMaximumHeight": function () {},
      "getMaximumWidth": function () {},
      "getRelativePosition": function () {},
      "getStyle": function () {},
      "getValueAtIndexOrDefault": function () {},
      "getValueOrDefault": function () {},
      "indexOf": function () {},
      "inherits": function () {},
      "isArray": function () {},
      "isNullOrUndef": function () {},
      "isNumber": function () {},
      "isObject": function () {},
      "log10": function () {},
      "longestText": function () {},
      "max": function () {},
      "measureText": function () {},
      "merge": function () {},
      "mergeIf": function () {},
      "min": function () {},
      "nextItem": function () {},
      "niceNum": function () {},
      "noop": function () {},
      "numberOfLabelLines": function () {},
      "options": {
        "resolve": function () {},
        "toLineHeight": function () {},
        "toPadding": function () {}
      },
      "previousItem": function () {},
      "removeEvent": function () {},
      "requestAnimFrame": function () {},
      "retinaScale": function () {},
      "scaleMerge": function () {},
      "sign": function () {},
      "splineCurve": function () {},
      "splineCurveMonotone": function () {},
      "toDegrees": function () {},
      "toRadians": function () {},
      "uid": function () {},
      "valueAtIndexOrDefault": function () {},
      "valueOrDefault": function () {},
      "where": function () {}
    },
    "instances": {},
    "layoutService": {
      "addBox": function () {},
      "configure": function () {},
      "defaults": {},
      "removeBox": function () {},
      "update": function () {}
    },
    "platform": {
      "_enabled": {},
      "_style": {},
      "acquireContext": function () {},
      "addEventListener": function () {},
      "initialize": function () {},
      "releaseContext": function () {},
      "removeEventListener": function () {}
    },
    "pluginService": {
      "_cacheId": {},
      "_plugins": {},
      "clear": function () {},
      "count": function () {},
      "descriptors": function () {},
      "getAll": function () {},
      "notify": function () {},
      "register": function () {},
      "unregister": function () {}
    },
    "plugins": {
      "_cacheId": {},
      "_plugins": {},
      "clear": function () {},
      "count": function () {},
      "descriptors": function () {},
      "getAll": function () {},
      "notify": function () {},
      "register": function () {},
      "unregister": function () {}
    },
    "scaleService": {
      "addScalesToLayout": function () {},
      "constructors": {
        "category": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "constructor": {
              "__super__": {
                "hasValue": function () {},
                "initialize": function () {},
                "pivot": function () {},
                "tooltipPosition": function () {},
                "transition": function () {}
              },
              "extend": function () {}
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleMargins": function () {},
            "hasValue": function () {},
            "initialize": function () {},
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": function () {},
            "setDimensions": function () {},
            "tooltipPosition": function () {},
            "transition": function () {},
            "update": function () {}
          },
          "extend": function () {}
        },
        "linear": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "constructor": {
              "__super__": {
                "_autoSkip": function () {},
                "afterBuildTicks": function () {},
                "afterCalculateTickRotation": function () {},
                "afterDataLimits": function () {},
                "afterFit": function () {},
                "afterSetDimensions": function () {},
                "afterTickToLabelConversion": function () {},
                "afterUpdate": function () {},
                "beforeBuildTicks": function () {},
                "beforeCalculateTickRotation": function () {},
                "beforeDataLimits": function () {},
                "beforeFit": function () {},
                "beforeSetDimensions": function () {},
                "beforeTickToLabelConversion": function () {},
                "beforeUpdate": function () {},
                "buildTicks": function () {},
                "calculateTickRotation": function () {},
                "constructor": {
                  "__super__": {
                    "closure_uid_896134970": {},
                    "hasValue": {
                      "closure_uid_896134970": {}
                    },
                    "initialize": {
                      "closure_uid_896134970": {}
                    },
                    "pivot": {
                      "closure_uid_896134970": {}
                    },
                    "tooltipPosition": {
                      "closure_uid_896134970": {}
                    },
                    "transition": {
                      "closure_uid_896134970": {}
                    }
                  },
                  "extend": {
                    "closure_uid_896134970": {}
                  }
                },
                "convertTicksToLabels": function () {},
                "determineDataLimits": function () {},
                "draw": function () {},
                "fit": function () {},
                "getBasePixel": function () {},
                "getBaseValue": function () {},
                "getLabelForIndex": function () {},
                "getPadding": function () {},
                "getPixelForDecimal": function () {},
                "getPixelForTick": function () {},
                "getPixelForValue": function () {},
                "getRightValue": function () {},
                "getTicks": function () {},
                "getValueForPixel": function () {},
                "handleMargins": function () {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "isFullWidth": function () {},
                "isHorizontal": function () {},
                "mergeTicksOptions": function () {},
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "setDimensions": function () {},
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                },
                "update": function () {}
              },
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTickLimit": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleDirectionalChanges": function () {},
            "handleMargins": function () {},
            "handleTickRangeOptions": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "logarithmic": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "closure_uid_896134970": {},
            "constructor": {
              "__super__": {
                "closure_uid_896134970": {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                }
              },
              "closure_uid_896134970": {},
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleMargins": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "radialLinear": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "closure_uid_896134970": {},
            "constructor": {
              "__super__": {
                "_autoSkip": function () {},
                "afterBuildTicks": function () {},
                "afterCalculateTickRotation": function () {},
                "afterDataLimits": function () {},
                "afterFit": function () {},
                "afterSetDimensions": function () {},
                "afterTickToLabelConversion": function () {},
                "afterUpdate": function () {},
                "beforeBuildTicks": function () {},
                "beforeCalculateTickRotation": function () {},
                "beforeDataLimits": function () {},
                "beforeFit": function () {},
                "beforeSetDimensions": function () {},
                "beforeTickToLabelConversion": function () {},
                "beforeUpdate": function () {},
                "buildTicks": function () {},
                "calculateTickRotation": function () {},
                "closure_uid_896134970": {},
                "constructor": {
                  "__super__": {
                    "closure_uid_896134970": {},
                    "hasValue": {
                      "closure_uid_896134970": {}
                    },
                    "initialize": {
                      "closure_uid_896134970": {}
                    },
                    "pivot": {
                      "closure_uid_896134970": {}
                    },
                    "tooltipPosition": {
                      "closure_uid_896134970": {}
                    },
                    "transition": {
                      "closure_uid_896134970": {}
                    }
                  },
                  "closure_uid_896134970": {},
                  "extend": {
                    "closure_uid_896134970": {}
                  }
                },
                "convertTicksToLabels": function () {},
                "determineDataLimits": function () {},
                "draw": function () {},
                "fit": function () {},
                "getBasePixel": function () {},
                "getBaseValue": function () {},
                "getLabelForIndex": function () {},
                "getPadding": function () {},
                "getPixelForDecimal": function () {},
                "getPixelForTick": function () {},
                "getPixelForValue": function () {},
                "getRightValue": function () {},
                "getTicks": function () {},
                "getValueForPixel": function () {},
                "handleMargins": function () {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "isFullWidth": function () {},
                "isHorizontal": function () {},
                "mergeTicksOptions": function () {},
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "setDimensions": function () {},
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                },
                "update": function () {}
              },
              "closure_uid_896134970": {},
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTickLimit": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleDirectionalChanges": function () {},
            "handleMargins": function () {},
            "handleTickRangeOptions": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "time": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "closure_uid_896134970": {},
            "constructor": {
              "__super__": {
                "closure_uid_896134970": {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                }
              },
              "closure_uid_896134970": {},
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleMargins": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        }
      },
      "defaults": {
        "category": {
          "position": {}
        },
        "linear": {
          "position": {},
          "ticks": {
            "callback": function () {}
          }
        },
        "logarithmic": {
          "position": {},
          "ticks": {
            "callback": function () {}
          }
        },
        "radialLinear": {
          "angleLines": {
            "color": {},
            "display": {},
            "lineWidth": {}
          },
          "animate": {},
          "display": {},
          "gridLines": {
            "circular": {}
          },
          "pointLabels": {
            "callback": function () {},
            "display": {},
            "fontSize": {}
          },
          "position": {},
          "ticks": {
            "backdropColor": {},
            "backdropPaddingX": {},
            "backdropPaddingY": {},
            "callback": function () {},
            "showLabelBackdrop": {}
          }
        },
        "time": {
          "bounds": {},
          "distribution": {},
          "position": {},
          "ticks": {
            "autoSkip": {},
            "major": {
              "enabled": {}
            },
            "source": {}
          },
          "time": {
            "displayFormat": {},
            "displayFormats": {
              "day": {},
              "hour": {},
              "millisecond": {},
              "minute": {},
              "month": {},
              "quarter": {},
              "second": {},
              "week": {},
              "year": {}
            },
            "format": {},
            "isoWeekday": {},
            "minUnit": {},
            "parser": {},
            "round": {},
            "unit": {}
          }
        }
      },
      "getScaleConstructor": function () {},
      "getScaleDefaults": function () {},
      "registerScaleType": function () {},
      "updateScaleDefaults": function () {}
    },
    "types": {}
  },
  "Controller": {
    "Animation": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Bar": function () {},
    "Bubble": function () {},
    "Chart": function () {},
    "Controller": function () {},
    "DatasetController": {
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Doughnut": function () {},
    "Element": {
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Interaction": {
      "modes": {
        "dataset": function () {},
        "index": function () {},
        "label": function () {},
        "nearest": function () {},
        "point": function () {},
        "single": function () {},
        "x": function () {},
        "x-axis": function () {},
        "y": function () {}
      }
    },
    "Legend": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Line": function () {},
    "LinearScaleBase": {
      "__super__": {
        "_autoSkip": function () {},
        "afterBuildTicks": function () {},
        "afterCalculateTickRotation": function () {},
        "afterDataLimits": function () {},
        "afterFit": function () {},
        "afterSetDimensions": function () {},
        "afterTickToLabelConversion": function () {},
        "afterUpdate": function () {},
        "beforeBuildTicks": function () {},
        "beforeCalculateTickRotation": function () {},
        "beforeDataLimits": function () {},
        "beforeFit": function () {},
        "beforeSetDimensions": function () {},
        "beforeTickToLabelConversion": function () {},
        "beforeUpdate": function () {},
        "buildTicks": function () {},
        "calculateTickRotation": function () {},
        "closure_uid_896134970": {},
        "constructor": {
          "__super__": {
            "closure_uid_896134970": {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "pivot": {
              "closure_uid_896134970": {}
            },
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            }
          },
          "closure_uid_896134970": {},
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "convertTicksToLabels": function () {},
        "determineDataLimits": function () {},
        "draw": function () {},
        "fit": function () {},
        "getBasePixel": function () {},
        "getBaseValue": function () {},
        "getLabelForIndex": function () {},
        "getPadding": function () {},
        "getPixelForDecimal": function () {},
        "getPixelForTick": function () {},
        "getPixelForValue": function () {},
        "getRightValue": function () {},
        "getTicks": function () {},
        "getValueForPixel": function () {},
        "handleMargins": function () {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "isFullWidth": function () {},
        "isHorizontal": function () {},
        "mergeTicksOptions": function () {},
        "pivot": {
          "closure_uid_896134970": {}
        },
        "setDimensions": function () {},
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        },
        "update": function () {}
      },
      "closure_uid_896134970": {},
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "PluginBase": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "PolarArea": function () {},
    "Radar": function () {},
    "Scale": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "closure_uid_896134970": {},
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Scatter": function () {},
    "Title": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Tooltip": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      },
      "positioners": {
        "average": function () {},
        "nearest": function () {}
      }
    },
    "animationService": {
      "addAnimation": function () {},
      "advance": function () {},
      "animations": {},
      "cancelAnimation": function () {},
      "dropFrames": {},
      "frameDuration": {},
      "request": {},
      "requestAnimationFrame": function () {},
      "startDigest": function () {}
    },
    "canvasHelpers": {
      "clear": function () {},
      "clipArea": function () {},
      "drawPoint": function () {},
      "lineTo": function () {},
      "roundedRect": function () {},
      "unclipArea": function () {}
    },
    "closure_uid_896134970": {},
    "controllers": {
      "bar": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "bubble": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "doughnut": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "horizontalBar": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "calculateBarIndexPixels": function () {},
          "calculateBarValuePixels": function () {},
          "constructor": {
            "__super__": {
              "addElementAndReset": function () {},
              "addElements": function () {},
              "buildOrUpdateElements": function () {},
              "createMetaData": function () {},
              "createMetaDataset": function () {},
              "dataElementType": {},
              "datasetElementType": {},
              "destroy": function () {},
              "draw": function () {},
              "getDataset": function () {},
              "getMeta": function () {},
              "getScaleForId": function () {},
              "initialize": function () {},
              "insertElements": function () {},
              "linkScales": function () {},
              "onDataPop": function () {},
              "onDataPush": function () {},
              "onDataShift": function () {},
              "onDataSplice": function () {},
              "onDataUnshift": function () {},
              "removeHoverStyle": function () {},
              "reset": function () {},
              "resyncElements": function () {},
              "setHoverStyle": function () {},
              "transition": function () {},
              "update": function () {},
              "updateIndex": function () {}
            },
            "extend": {
              "closure_uid_896134970": {}
            }
          },
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {
            "__super__": {
              "closure_uid_896134970": {},
              "hasValue": {
                "closure_uid_896134970": {}
              },
              "initialize": {
                "closure_uid_896134970": {}
              },
              "pivot": {
                "closure_uid_896134970": {}
              },
              "tooltipPosition": {
                "closure_uid_896134970": {}
              },
              "transition": {
                "closure_uid_896134970": {}
              }
            },
            "extend": {
              "closure_uid_896134970": {}
            }
          },
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getIndexScale": function () {},
          "getIndexScaleId": function () {},
          "getMeta": function () {},
          "getRuler": function () {},
          "getScaleForId": function () {},
          "getStackCount": function () {},
          "getStackIndex": function () {},
          "getValueScale": function () {},
          "getValueScaleId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateElement": function () {},
          "updateElementGeometry": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "line": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "pie": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "polarArea": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "radar": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "scatter": {
        "__super__": {
          "addElementAndReset": function () {},
          "addElements": function () {},
          "buildOrUpdateElements": function () {},
          "createMetaData": function () {},
          "createMetaDataset": function () {},
          "dataElementType": {},
          "datasetElementType": {},
          "destroy": function () {},
          "draw": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "initialize": function () {},
          "insertElements": function () {},
          "linkScales": function () {},
          "onDataPop": function () {},
          "onDataPush": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {},
          "removeHoverStyle": function () {},
          "reset": function () {},
          "resyncElements": function () {},
          "setHoverStyle": function () {},
          "transition": function () {},
          "update": function () {},
          "updateIndex": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      }
    },
    "defaults": {
      "_set": function () {},
      "bar": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        }
      },
      "bubble": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      },
      "doughnut": {
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "circumference": {},
        "cutoutPercentage": {},
        "hover": {
          "mode": {}
        },
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "legendCallback": function () {},
        "rotation": {},
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      },
      "global": {
        "animation": {
          "duration": {},
          "easing": {},
          "onComplete": function () {},
          "onProgress": function () {}
        },
        "defaultColor": {},
        "defaultFontColor": {},
        "defaultFontFamily": {},
        "defaultFontSize": {},
        "defaultFontStyle": {},
        "elements": {
          "arc": {
            "backgroundColor": {},
            "borderColor": {},
            "borderWidth": {}
          },
          "line": {
            "backgroundColor": {},
            "borderCapStyle": {},
            "borderColor": {},
            "borderDash": {},
            "borderDashOffset": {},
            "borderJoinStyle": {},
            "borderWidth": {},
            "capBezierPoints": {},
            "fill": {},
            "tension": {}
          },
          "point": {
            "backgroundColor": {},
            "borderColor": {},
            "borderWidth": {},
            "hitRadius": {},
            "hoverBorderWidth": {},
            "hoverRadius": {},
            "pointStyle": {},
            "radius": {}
          },
          "rectangle": {
            "backgroundColor": {},
            "borderColor": {},
            "borderSkipped": {},
            "borderWidth": {}
          }
        },
        "events": {},
        "hover": {
          "animationDuration": {},
          "intersect": {},
          "mode": {},
          "onHover": {}
        },
        "layout": {
          "padding": {
            "bottom": {},
            "left": {},
            "right": {},
            "top": {}
          }
        },
        "legend": {
          "display": {},
          "fullWidth": {},
          "labels": {
            "boxWidth": {},
            "generateLabels": function () {},
            "padding": {}
          },
          "onClick": function () {},
          "onHover": {},
          "position": {},
          "reverse": {},
          "weight": {}
        },
        "legendCallback": function () {},
        "maintainAspectRatio": {},
        "onClick": {},
        "plugins": {
          "filler": {
            "propagate": {}
          }
        },
        "responsive": {},
        "responsiveAnimationDuration": {},
        "showLines": {},
        "title": {
          "display": {},
          "fontStyle": {},
          "fullWidth": {},
          "lineHeight": {},
          "padding": {},
          "position": {},
          "text": {},
          "weight": {}
        },
        "tooltips": {
          "backgroundColor": {},
          "bodyAlign": {},
          "bodyFontColor": {},
          "bodySpacing": {},
          "borderColor": {},
          "borderWidth": {},
          "callbacks": {
            "afterBody": function () {},
            "afterFooter": function () {},
            "afterLabel": function () {},
            "afterTitle": function () {},
            "beforeBody": function () {},
            "beforeFooter": function () {},
            "beforeLabel": function () {},
            "beforeTitle": function () {},
            "footer": function () {},
            "label": function () {},
            "labelColor": function () {},
            "labelTextColor": function () {},
            "title": function () {}
          },
          "caretPadding": {},
          "caretSize": {},
          "cornerRadius": {},
          "custom": {},
          "displayColors": {},
          "enabled": {},
          "footerAlign": {},
          "footerFontColor": {},
          "footerFontStyle": {},
          "footerMarginTop": {},
          "footerSpacing": {},
          "intersect": {},
          "mode": {},
          "multiKeyBackground": {},
          "position": {},
          "titleAlign": {},
          "titleFontColor": {},
          "titleFontStyle": {},
          "titleMarginBottom": {},
          "titleSpacing": {},
          "xPadding": {},
          "yPadding": {}
        }
      },
      "horizontalBar": {
        "elements": {
          "rectangle": {
            "borderSkipped": {}
          }
        },
        "hover": {
          "axis": {},
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "tooltips": {
          "axis": {},
          "callbacks": {
            "label": function () {},
            "title": function () {}
          },
          "mode": {}
        }
      },
      "line": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "showLines": {},
        "spanGaps": {}
      },
      "pie": {
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "circumference": {},
        "cutoutPercentage": {},
        "hover": {
          "mode": {}
        },
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "legendCallback": function () {},
        "rotation": {},
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      },
      "polarArea": {
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "legendCallback": function () {},
        "scale": {
          "angleLines": {
            "display": {}
          },
          "gridLines": {
            "circular": {}
          },
          "pointLabels": {
            "display": {}
          },
          "ticks": {
            "beginAtZero": {}
          },
          "type": {}
        },
        "startAngle": {},
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      },
      "radar": {
        "elements": {
          "line": {
            "tension": {}
          }
        },
        "scale": {
          "type": {}
        }
      },
      "scale": {
        "display": {},
        "gridLines": {
          "borderDash": {},
          "borderDashOffset": {},
          "color": {},
          "display": {},
          "drawBorder": {},
          "drawOnChartArea": {},
          "drawTicks": {},
          "lineWidth": {},
          "offsetGridLines": {},
          "tickMarkLength": {},
          "zeroLineBorderDash": {},
          "zeroLineBorderDashOffset": {},
          "zeroLineColor": {},
          "zeroLineWidth": {}
        },
        "offset": {},
        "position": {},
        "scaleLabel": {
          "display": {},
          "labelString": {},
          "lineHeight": {},
          "padding": {
            "bottom": {},
            "top": {}
          }
        },
        "ticks": {
          "autoSkip": {},
          "autoSkipPadding": {},
          "beginAtZero": {},
          "callback": function () {},
          "display": {},
          "labelOffset": {},
          "major": {},
          "maxRotation": {},
          "minRotation": {},
          "minor": {},
          "mirror": {},
          "padding": {},
          "reverse": {}
        }
      },
      "scatter": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "showLines": {},
        "tooltips": {
          "callbacks": {
            "label": function () {},
            "title": function () {}
          }
        }
      }
    },
    "elements": {
      "Arc": {
        "__super__": {
          "closure_uid_896134970": {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "pivot": {
            "closure_uid_896134970": {}
          },
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          }
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "Line": {
        "__super__": {
          "closure_uid_896134970": {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "pivot": {
            "closure_uid_896134970": {}
          },
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          }
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "Point": {
        "__super__": {
          "closure_uid_896134970": {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "pivot": {
            "closure_uid_896134970": {}
          },
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          }
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "Rectangle": {
        "__super__": {
          "closure_uid_896134970": {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "pivot": {
            "closure_uid_896134970": {}
          },
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          }
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      }
    },
    "helpers": {
      "EPSILON": {},
      "_merger": function () {},
      "_mergerIf": function () {},
      "addEvent": function () {},
      "aliasPixel": function () {},
      "almostEquals": function () {},
      "almostWhole": function () {},
      "arrayEquals": function () {},
      "callCallback": function () {},
      "callback": function () {},
      "canvas": {
        "clear": function () {},
        "clipArea": function () {},
        "drawPoint": function () {},
        "lineTo": function () {},
        "roundedRect": function () {},
        "unclipArea": function () {}
      },
      "clear": function () {},
      "clone": function () {},
      "color": function () {},
      "configMerge": function () {},
      "distanceBetweenPoints": function () {},
      "drawRoundedRectangle": function () {},
      "each": function () {},
      "easing": {
        "effects": {
          "easeInBack": function () {},
          "easeInBounce": function () {},
          "easeInCirc": function () {},
          "easeInCubic": function () {},
          "easeInElastic": function () {},
          "easeInExpo": function () {},
          "easeInOutBack": function () {},
          "easeInOutBounce": function () {},
          "easeInOutCirc": function () {},
          "easeInOutCubic": function () {},
          "easeInOutElastic": function () {},
          "easeInOutExpo": function () {},
          "easeInOutQuad": function () {},
          "easeInOutQuart": function () {},
          "easeInOutQuint": function () {},
          "easeInOutSine": function () {},
          "easeInQuad": function () {},
          "easeInQuart": function () {},
          "easeInQuint": function () {},
          "easeInSine": function () {},
          "easeOutBack": function () {},
          "easeOutBounce": function () {},
          "easeOutCirc": function () {},
          "easeOutCubic": function () {},
          "easeOutElastic": function () {},
          "easeOutExpo": function () {},
          "easeOutQuad": function () {},
          "easeOutQuart": function () {},
          "easeOutQuint": function () {},
          "easeOutSine": function () {},
          "linear": function () {}
        }
      },
      "easingEffects": {
        "easeInBack": function () {},
        "easeInBounce": function () {},
        "easeInCirc": function () {},
        "easeInCubic": function () {},
        "easeInElastic": function () {},
        "easeInExpo": function () {},
        "easeInOutBack": function () {},
        "easeInOutBounce": function () {},
        "easeInOutCirc": function () {},
        "easeInOutCubic": function () {},
        "easeInOutElastic": function () {},
        "easeInOutExpo": function () {},
        "easeInOutQuad": function () {},
        "easeInOutQuart": function () {},
        "easeInOutQuint": function () {},
        "easeInOutSine": function () {},
        "easeInQuad": function () {},
        "easeInQuart": function () {},
        "easeInQuint": function () {},
        "easeInSine": function () {},
        "easeOutBack": function () {},
        "easeOutBounce": function () {},
        "easeOutCirc": function () {},
        "easeOutCubic": function () {},
        "easeOutElastic": function () {},
        "easeOutExpo": function () {},
        "easeOutQuad": function () {},
        "easeOutQuart": function () {},
        "easeOutQuint": function () {},
        "easeOutSine": function () {},
        "linear": function () {}
      },
      "extend": function () {},
      "findIndex": function () {},
      "findNextWhere": function () {},
      "findPreviousWhere": function () {},
      "fontString": function () {},
      "getAngleFromPoint": function () {},
      "getConstraintHeight": function () {},
      "getConstraintWidth": function () {},
      "getHoverColor": function () {},
      "getMaximumHeight": function () {},
      "getMaximumWidth": function () {},
      "getRelativePosition": function () {},
      "getStyle": function () {},
      "getValueAtIndexOrDefault": function () {},
      "getValueOrDefault": function () {},
      "indexOf": function () {},
      "inherits": {
        "closure_uid_896134970": {}
      },
      "isArray": function () {},
      "isNullOrUndef": function () {},
      "isNumber": function () {},
      "isObject": function () {},
      "log10": function () {},
      "longestText": function () {},
      "max": function () {},
      "measureText": function () {},
      "merge": function () {},
      "mergeIf": function () {},
      "min": function () {},
      "nextItem": function () {},
      "niceNum": function () {},
      "noop": function () {},
      "numberOfLabelLines": function () {},
      "options": {
        "resolve": function () {},
        "toLineHeight": function () {},
        "toPadding": function () {}
      },
      "previousItem": function () {},
      "removeEvent": function () {},
      "requestAnimFrame": function () {},
      "retinaScale": function () {},
      "scaleMerge": function () {},
      "sign": function () {},
      "splineCurve": function () {},
      "splineCurveMonotone": function () {},
      "toDegrees": function () {},
      "toRadians": function () {},
      "uid": function () {},
      "valueAtIndexOrDefault": function () {},
      "valueOrDefault": function () {},
      "where": function () {}
    },
    "instances": {},
    "layoutService": {
      "addBox": function () {},
      "configure": function () {},
      "defaults": {},
      "removeBox": function () {},
      "update": function () {}
    },
    "platform": {
      "_enabled": {},
      "_style": {},
      "acquireContext": function () {},
      "addEventListener": function () {},
      "initialize": function () {},
      "releaseContext": function () {},
      "removeEventListener": function () {}
    },
    "pluginService": {
      "_cacheId": {},
      "_plugins": {},
      "clear": function () {},
      "count": function () {},
      "descriptors": function () {},
      "getAll": function () {},
      "notify": function () {},
      "register": function () {},
      "unregister": function () {}
    },
    "plugins": {
      "_cacheId": {},
      "_plugins": {},
      "clear": function () {},
      "count": function () {},
      "descriptors": function () {},
      "getAll": function () {},
      "notify": function () {},
      "register": function () {},
      "unregister": function () {}
    },
    "scaleService": {
      "addScalesToLayout": function () {},
      "closure_uid_896134970": {},
      "constructors": {
        "category": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "closure_uid_896134970": {},
            "constructor": {
              "__super__": {
                "closure_uid_896134970": {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                }
              },
              "closure_uid_896134970": {},
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleMargins": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "closure_uid_896134970": {},
        "linear": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "closure_uid_896134970": {},
            "constructor": {
              "__super__": {
                "_autoSkip": function () {},
                "afterBuildTicks": function () {},
                "afterCalculateTickRotation": function () {},
                "afterDataLimits": function () {},
                "afterFit": function () {},
                "afterSetDimensions": function () {},
                "afterTickToLabelConversion": function () {},
                "afterUpdate": function () {},
                "beforeBuildTicks": function () {},
                "beforeCalculateTickRotation": function () {},
                "beforeDataLimits": function () {},
                "beforeFit": function () {},
                "beforeSetDimensions": function () {},
                "beforeTickToLabelConversion": function () {},
                "beforeUpdate": function () {},
                "buildTicks": function () {},
                "calculateTickRotation": function () {},
                "closure_uid_896134970": {},
                "constructor": {
                  "__super__": {
                    "closure_uid_896134970": {},
                    "hasValue": {
                      "closure_uid_896134970": {}
                    },
                    "initialize": {
                      "closure_uid_896134970": {}
                    },
                    "pivot": {
                      "closure_uid_896134970": {}
                    },
                    "tooltipPosition": {
                      "closure_uid_896134970": {}
                    },
                    "transition": {
                      "closure_uid_896134970": {}
                    }
                  },
                  "closure_uid_896134970": {},
                  "extend": {
                    "closure_uid_896134970": {}
                  }
                },
                "convertTicksToLabels": function () {},
                "determineDataLimits": function () {},
                "draw": function () {},
                "fit": function () {},
                "getBasePixel": function () {},
                "getBaseValue": function () {},
                "getLabelForIndex": function () {},
                "getPadding": function () {},
                "getPixelForDecimal": function () {},
                "getPixelForTick": function () {},
                "getPixelForValue": function () {},
                "getRightValue": function () {},
                "getTicks": function () {},
                "getValueForPixel": function () {},
                "handleMargins": function () {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "isFullWidth": function () {},
                "isHorizontal": function () {},
                "mergeTicksOptions": function () {},
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "setDimensions": function () {},
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                },
                "update": function () {}
              },
              "closure_uid_896134970": {},
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTickLimit": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleDirectionalChanges": function () {},
            "handleMargins": function () {},
            "handleTickRangeOptions": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "closure_uid_896134970": {},
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "logarithmic": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "closure_uid_896134970": {},
            "constructor": {
              "__super__": {
                "closure_uid_896134970": {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                }
              },
              "closure_uid_896134970": {},
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleMargins": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "radialLinear": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "closure_uid_896134970": {},
            "constructor": {
              "__super__": {
                "_autoSkip": function () {},
                "afterBuildTicks": function () {},
                "afterCalculateTickRotation": function () {},
                "afterDataLimits": function () {},
                "afterFit": function () {},
                "afterSetDimensions": function () {},
                "afterTickToLabelConversion": function () {},
                "afterUpdate": function () {},
                "beforeBuildTicks": function () {},
                "beforeCalculateTickRotation": function () {},
                "beforeDataLimits": function () {},
                "beforeFit": function () {},
                "beforeSetDimensions": function () {},
                "beforeTickToLabelConversion": function () {},
                "beforeUpdate": function () {},
                "buildTicks": function () {},
                "calculateTickRotation": function () {},
                "closure_uid_896134970": {},
                "constructor": {
                  "__super__": {
                    "closure_uid_896134970": {},
                    "hasValue": {
                      "closure_uid_896134970": {}
                    },
                    "initialize": {
                      "closure_uid_896134970": {}
                    },
                    "pivot": {
                      "closure_uid_896134970": {}
                    },
                    "tooltipPosition": {
                      "closure_uid_896134970": {}
                    },
                    "transition": {
                      "closure_uid_896134970": {}
                    }
                  },
                  "closure_uid_896134970": {},
                  "extend": {
                    "closure_uid_896134970": {}
                  }
                },
                "convertTicksToLabels": function () {},
                "determineDataLimits": function () {},
                "draw": function () {},
                "fit": function () {},
                "getBasePixel": function () {},
                "getBaseValue": function () {},
                "getLabelForIndex": function () {},
                "getPadding": function () {},
                "getPixelForDecimal": function () {},
                "getPixelForTick": function () {},
                "getPixelForValue": function () {},
                "getRightValue": function () {},
                "getTicks": function () {},
                "getValueForPixel": function () {},
                "handleMargins": function () {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "isFullWidth": function () {},
                "isHorizontal": function () {},
                "mergeTicksOptions": function () {},
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "setDimensions": function () {},
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                },
                "update": function () {}
              },
              "closure_uid_896134970": {},
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTickLimit": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleDirectionalChanges": function () {},
            "handleMargins": function () {},
            "handleTickRangeOptions": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "closure_uid_896134970": {},
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "time": {
          "__super__": {
            "_autoSkip": function () {},
            "afterBuildTicks": function () {},
            "afterCalculateTickRotation": function () {},
            "afterDataLimits": function () {},
            "afterFit": function () {},
            "afterSetDimensions": function () {},
            "afterTickToLabelConversion": function () {},
            "afterUpdate": function () {},
            "beforeBuildTicks": function () {},
            "beforeCalculateTickRotation": function () {},
            "beforeDataLimits": function () {},
            "beforeFit": function () {},
            "beforeSetDimensions": function () {},
            "beforeTickToLabelConversion": function () {},
            "beforeUpdate": function () {},
            "buildTicks": function () {},
            "calculateTickRotation": function () {},
            "closure_uid_896134970": {},
            "constructor": {
              "__super__": {
                "closure_uid_896134970": {},
                "hasValue": {
                  "closure_uid_896134970": {}
                },
                "initialize": {
                  "closure_uid_896134970": {}
                },
                "pivot": {
                  "closure_uid_896134970": {}
                },
                "tooltipPosition": {
                  "closure_uid_896134970": {}
                },
                "transition": {
                  "closure_uid_896134970": {}
                }
              },
              "closure_uid_896134970": {},
              "extend": {
                "closure_uid_896134970": {}
              }
            },
            "convertTicksToLabels": function () {},
            "determineDataLimits": function () {},
            "draw": function () {},
            "fit": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "getLabelForIndex": function () {},
            "getPadding": function () {},
            "getPixelForDecimal": function () {},
            "getPixelForTick": function () {},
            "getPixelForValue": function () {},
            "getRightValue": function () {},
            "getTicks": function () {},
            "getValueForPixel": function () {},
            "handleMargins": function () {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "isFullWidth": function () {},
            "isHorizontal": function () {},
            "mergeTicksOptions": function () {},
            "pivot": {
              "closure_uid_896134970": {}
            },
            "setDimensions": function () {},
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            },
            "update": function () {}
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        }
      },
      "defaults": {
        "category": {
          "position": {}
        },
        "linear": {
          "position": {},
          "ticks": {
            "callback": function () {}
          }
        },
        "logarithmic": {
          "position": {},
          "ticks": {
            "callback": function () {}
          }
        },
        "radialLinear": {
          "angleLines": {
            "color": {},
            "display": {},
            "lineWidth": {}
          },
          "animate": {},
          "display": {},
          "gridLines": {
            "circular": {}
          },
          "pointLabels": {
            "callback": function () {},
            "display": {},
            "fontSize": {}
          },
          "position": {},
          "ticks": {
            "backdropColor": {},
            "backdropPaddingX": {},
            "backdropPaddingY": {},
            "callback": function () {},
            "showLabelBackdrop": {}
          }
        },
        "time": {
          "bounds": {},
          "distribution": {},
          "position": {},
          "ticks": {
            "autoSkip": {},
            "major": {
              "enabled": {}
            },
            "source": {}
          },
          "time": {
            "displayFormat": {},
            "displayFormats": {
              "day": {},
              "hour": {},
              "millisecond": {},
              "minute": {},
              "month": {},
              "quarter": {},
              "second": {},
              "week": {},
              "year": {}
            },
            "format": {},
            "isoWeekday": {},
            "minUnit": {},
            "parser": {},
            "round": {},
            "unit": {}
          }
        }
      },
      "getScaleConstructor": function () {},
      "getScaleDefaults": function () {},
      "registerScaleType": function () {},
      "updateScaleDefaults": function () {}
    },
    "types": {}
  },
  "DatasetController": {
    "extend": {
      "closure_uid_896134970": {}
    }
  },
  "Doughnut": function () {},
  "Element": {
    "extend": {
      "closure_uid_896134970": {}
    }
  },
  "Interaction": {
    "modes": {
      "dataset": function () {},
      "index": function () {},
      "label": function () {},
      "nearest": function () {},
      "point": function () {},
      "single": function () {},
      "x": function () {},
      "x-axis": function () {},
      "y": function () {}
    }
  },
  "Legend": {
    "__super__": {
      "closure_uid_896134970": {},
      "hasValue": {
        "closure_uid_896134970": {}
      },
      "initialize": {
        "closure_uid_896134970": {}
      },
      "pivot": {
        "closure_uid_896134970": {}
      },
      "tooltipPosition": {
        "closure_uid_896134970": {}
      },
      "transition": {
        "closure_uid_896134970": {}
      }
    },
    "extend": {
      "closure_uid_896134970": {}
    }
  },
  "Line": function () {},
  "LinearScaleBase": {
    "__super__": {
      "_autoSkip": function () {},
      "afterBuildTicks": function () {},
      "afterCalculateTickRotation": function () {},
      "afterDataLimits": function () {},
      "afterFit": function () {},
      "afterSetDimensions": function () {},
      "afterTickToLabelConversion": function () {},
      "afterUpdate": function () {},
      "beforeBuildTicks": function () {},
      "beforeCalculateTickRotation": function () {},
      "beforeDataLimits": function () {},
      "beforeFit": function () {},
      "beforeSetDimensions": function () {},
      "beforeTickToLabelConversion": function () {},
      "beforeUpdate": function () {},
      "buildTicks": function () {},
      "calculateTickRotation": function () {},
      "closure_uid_896134970": {},
      "constructor": {
        "__super__": {
          "closure_uid_896134970": {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "pivot": {
            "closure_uid_896134970": {}
          },
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          }
        },
        "closure_uid_896134970": {},
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "convertTicksToLabels": function () {},
      "determineDataLimits": function () {},
      "draw": function () {},
      "fit": function () {},
      "getBasePixel": function () {},
      "getBaseValue": function () {},
      "getLabelForIndex": function () {},
      "getPadding": function () {},
      "getPixelForDecimal": function () {},
      "getPixelForTick": function () {},
      "getPixelForValue": function () {},
      "getRightValue": function () {},
      "getTicks": function () {},
      "getValueForPixel": function () {},
      "handleMargins": function () {},
      "hasValue": {
        "closure_uid_896134970": {}
      },
      "initialize": {
        "closure_uid_896134970": {}
      },
      "isFullWidth": function () {},
      "isHorizontal": function () {},
      "mergeTicksOptions": function () {},
      "pivot": {
        "closure_uid_896134970": {}
      },
      "setDimensions": function () {},
      "tooltipPosition": {
        "closure_uid_896134970": {}
      },
      "transition": {
        "closure_uid_896134970": {}
      },
      "update": function () {}
    },
    "closure_uid_896134970": {},
    "extend": {
      "closure_uid_896134970": {}
    }
  },
  "PluginBase": {
    "__super__": {
      "closure_uid_896134970": {},
      "hasValue": {
        "closure_uid_896134970": {}
      },
      "initialize": {
        "closure_uid_896134970": {}
      },
      "pivot": {
        "closure_uid_896134970": {}
      },
      "tooltipPosition": {
        "closure_uid_896134970": {}
      },
      "transition": {
        "closure_uid_896134970": {}
      }
    },
    "extend": {
      "closure_uid_896134970": {}
    }
  },
  "PolarArea": function () {},
  "Radar": function () {},
  "Scale": {
    "__super__": {
      "closure_uid_896134970": {},
      "hasValue": {
        "closure_uid_896134970": {}
      },
      "initialize": {
        "closure_uid_896134970": {}
      },
      "pivot": {
        "closure_uid_896134970": {}
      },
      "tooltipPosition": {
        "closure_uid_896134970": {}
      },
      "transition": {
        "closure_uid_896134970": {}
      }
    },
    "closure_uid_896134970": {},
    "extend": {
      "closure_uid_896134970": {}
    }
  },
  "Scatter": function () {},
  "Title": {
    "__super__": {
      "closure_uid_896134970": {},
      "hasValue": {
        "closure_uid_896134970": {}
      },
      "initialize": {
        "closure_uid_896134970": {}
      },
      "pivot": {
        "closure_uid_896134970": {}
      },
      "tooltipPosition": {
        "closure_uid_896134970": {}
      },
      "transition": {
        "closure_uid_896134970": {}
      }
    },
    "extend": {
      "closure_uid_896134970": {}
    }
  },
  "Tooltip": {
    "__super__": {
      "closure_uid_896134970": {},
      "hasValue": {
        "closure_uid_896134970": {}
      },
      "initialize": {
        "closure_uid_896134970": {}
      },
      "pivot": {
        "closure_uid_896134970": {}
      },
      "tooltipPosition": {
        "closure_uid_896134970": {}
      },
      "transition": {
        "closure_uid_896134970": {}
      }
    },
    "extend": {
      "closure_uid_896134970": {}
    },
    "positioners": {
      "average": function () {},
      "nearest": function () {}
    }
  },
  "animationService": {
    "addAnimation": function () {},
    "advance": function () {},
    "animations": {},
    "cancelAnimation": function () {},
    "dropFrames": {},
    "frameDuration": {},
    "request": {},
    "requestAnimationFrame": function () {},
    "startDigest": function () {}
  },
  "canvasHelpers": {
    "clear": function () {},
    "clipArea": function () {},
    "drawPoint": function () {},
    "lineTo": function () {},
    "roundedRect": function () {},
    "unclipArea": function () {}
  },
  "controllers": {
    "bar": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {},
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "bubble": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {},
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "doughnut": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {},
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "horizontalBar": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "calculateBarIndexPixels": function () {},
        "calculateBarValuePixels": function () {},
        "constructor": {
          "__super__": {
            "addElementAndReset": function () {},
            "addElements": function () {},
            "buildOrUpdateElements": function () {},
            "createMetaData": function () {},
            "createMetaDataset": function () {},
            "dataElementType": {},
            "datasetElementType": {},
            "destroy": function () {},
            "draw": function () {},
            "getDataset": function () {},
            "getMeta": function () {},
            "getScaleForId": function () {},
            "initialize": function () {},
            "insertElements": function () {},
            "linkScales": function () {},
            "onDataPop": function () {},
            "onDataPush": function () {},
            "onDataShift": function () {},
            "onDataSplice": function () {},
            "onDataUnshift": function () {},
            "removeHoverStyle": function () {},
            "reset": function () {},
            "resyncElements": function () {},
            "setHoverStyle": function () {},
            "transition": function () {},
            "update": function () {},
            "updateIndex": function () {}
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {
          "__super__": {
            "closure_uid_896134970": {},
            "hasValue": {
              "closure_uid_896134970": {}
            },
            "initialize": {
              "closure_uid_896134970": {}
            },
            "pivot": {
              "closure_uid_896134970": {}
            },
            "tooltipPosition": {
              "closure_uid_896134970": {}
            },
            "transition": {
              "closure_uid_896134970": {}
            }
          },
          "extend": {
            "closure_uid_896134970": {}
          }
        },
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getIndexScale": function () {},
        "getIndexScaleId": function () {},
        "getMeta": function () {},
        "getRuler": function () {},
        "getScaleForId": function () {},
        "getStackCount": function () {},
        "getStackIndex": function () {},
        "getValueScale": function () {},
        "getValueScaleId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateElement": function () {},
        "updateElementGeometry": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "line": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {},
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "pie": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {},
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "polarArea": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {},
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "radar": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {},
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "scatter": {
      "__super__": {
        "addElementAndReset": function () {},
        "addElements": function () {},
        "buildOrUpdateElements": function () {},
        "createMetaData": function () {},
        "createMetaDataset": function () {},
        "dataElementType": {},
        "datasetElementType": {},
        "destroy": function () {},
        "draw": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "initialize": function () {},
        "insertElements": function () {},
        "linkScales": function () {},
        "onDataPop": function () {},
        "onDataPush": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {},
        "removeHoverStyle": function () {},
        "reset": function () {},
        "resyncElements": function () {},
        "setHoverStyle": function () {},
        "transition": function () {},
        "update": function () {},
        "updateIndex": function () {}
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    }
  },
  "defaults": {
    "_set": function () {},
    "bar": {
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      }
    },
    "bubble": {
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      },
      "tooltips": {
        "callbacks": {
          "label": function () {},
          "title": function () {}
        }
      }
    },
    "doughnut": {
      "animation": {
        "animateRotate": {},
        "animateScale": {}
      },
      "circumference": {},
      "cutoutPercentage": {},
      "hover": {
        "mode": {}
      },
      "legend": {
        "labels": {
          "generateLabels": function () {}
        },
        "onClick": function () {}
      },
      "legendCallback": function () {},
      "rotation": {},
      "tooltips": {
        "callbacks": {
          "label": function () {},
          "title": function () {}
        }
      }
    },
    "global": {
      "animation": {
        "duration": {},
        "easing": {},
        "onComplete": function () {},
        "onProgress": function () {}
      },
      "defaultColor": {},
      "defaultFontColor": {},
      "defaultFontFamily": {},
      "defaultFontSize": {},
      "defaultFontStyle": {},
      "elements": {
        "arc": {
          "backgroundColor": {},
          "borderColor": {},
          "borderWidth": {}
        },
        "line": {
          "backgroundColor": {},
          "borderCapStyle": {},
          "borderColor": {},
          "borderDash": {},
          "borderDashOffset": {},
          "borderJoinStyle": {},
          "borderWidth": {},
          "capBezierPoints": {},
          "fill": {},
          "tension": {}
        },
        "point": {
          "backgroundColor": {},
          "borderColor": {},
          "borderWidth": {},
          "hitRadius": {},
          "hoverBorderWidth": {},
          "hoverRadius": {},
          "pointStyle": {},
          "radius": {}
        },
        "rectangle": {
          "backgroundColor": {},
          "borderColor": {},
          "borderSkipped": {},
          "borderWidth": {}
        }
      },
      "events": {},
      "hover": {
        "animationDuration": {},
        "intersect": {},
        "mode": {},
        "onHover": {}
      },
      "layout": {
        "padding": {
          "bottom": {},
          "left": {},
          "right": {},
          "top": {}
        }
      },
      "legend": {
        "display": {},
        "fullWidth": {},
        "labels": {
          "boxWidth": {},
          "generateLabels": function () {},
          "padding": {}
        },
        "onClick": function () {},
        "onHover": {},
        "position": {},
        "reverse": {},
        "weight": {}
      },
      "legendCallback": function () {},
      "maintainAspectRatio": {},
      "onClick": {},
      "plugins": {
        "filler": {
          "propagate": {}
        }
      },
      "responsive": {},
      "responsiveAnimationDuration": {},
      "showLines": {},
      "title": {
        "display": {},
        "fontStyle": {},
        "fullWidth": {},
        "lineHeight": {},
        "padding": {},
        "position": {},
        "text": {},
        "weight": {}
      },
      "tooltips": {
        "backgroundColor": {},
        "bodyAlign": {},
        "bodyFontColor": {},
        "bodySpacing": {},
        "borderColor": {},
        "borderWidth": {},
        "callbacks": {
          "afterBody": function () {},
          "afterFooter": function () {},
          "afterLabel": function () {},
          "afterTitle": function () {},
          "beforeBody": function () {},
          "beforeFooter": function () {},
          "beforeLabel": function () {},
          "beforeTitle": function () {},
          "footer": function () {},
          "label": function () {},
          "labelColor": function () {},
          "labelTextColor": function () {},
          "title": function () {}
        },
        "caretPadding": {},
        "caretSize": {},
        "cornerRadius": {},
        "custom": {},
        "displayColors": {},
        "enabled": {},
        "footerAlign": {},
        "footerFontColor": {},
        "footerFontStyle": {},
        "footerMarginTop": {},
        "footerSpacing": {},
        "intersect": {},
        "mode": {},
        "multiKeyBackground": {},
        "position": {},
        "titleAlign": {},
        "titleFontColor": {},
        "titleFontStyle": {},
        "titleMarginBottom": {},
        "titleSpacing": {},
        "xPadding": {},
        "yPadding": {}
      }
    },
    "horizontalBar": {
      "elements": {
        "rectangle": {
          "borderSkipped": {}
        }
      },
      "hover": {
        "axis": {},
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      },
      "tooltips": {
        "axis": {},
        "callbacks": {
          "label": function () {},
          "title": function () {}
        },
        "mode": {}
      }
    },
    "line": {
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      },
      "showLines": {},
      "spanGaps": {}
    },
    "pie": {
      "animation": {
        "animateRotate": {},
        "animateScale": {}
      },
      "circumference": {},
      "cutoutPercentage": {},
      "hover": {
        "mode": {}
      },
      "legend": {
        "labels": {
          "generateLabels": function () {}
        },
        "onClick": function () {}
      },
      "legendCallback": function () {},
      "rotation": {},
      "tooltips": {
        "callbacks": {
          "label": function () {},
          "title": function () {}
        }
      }
    },
    "polarArea": {
      "animation": {
        "animateRotate": {},
        "animateScale": {}
      },
      "legend": {
        "labels": {
          "generateLabels": function () {}
        },
        "onClick": function () {}
      },
      "legendCallback": function () {},
      "scale": {
        "angleLines": {
          "display": {}
        },
        "gridLines": {
          "circular": {}
        },
        "pointLabels": {
          "display": {}
        },
        "ticks": {
          "beginAtZero": {}
        },
        "type": {}
      },
      "startAngle": {},
      "tooltips": {
        "callbacks": {
          "label": function () {},
          "title": function () {}
        }
      }
    },
    "radar": {
      "elements": {
        "line": {
          "tension": {}
        }
      },
      "scale": {
        "type": {}
      }
    },
    "scale": {
      "display": {},
      "gridLines": {
        "borderDash": {},
        "borderDashOffset": {},
        "color": {},
        "display": {},
        "drawBorder": {},
        "drawOnChartArea": {},
        "drawTicks": {},
        "lineWidth": {},
        "offsetGridLines": {},
        "tickMarkLength": {},
        "zeroLineBorderDash": {},
        "zeroLineBorderDashOffset": {},
        "zeroLineColor": {},
        "zeroLineWidth": {}
      },
      "offset": {},
      "position": {},
      "scaleLabel": {
        "display": {},
        "labelString": {},
        "lineHeight": {},
        "padding": {
          "bottom": {},
          "top": {}
        }
      },
      "ticks": {
        "autoSkip": {},
        "autoSkipPadding": {},
        "beginAtZero": {},
        "callback": function () {},
        "display": {},
        "labelOffset": {},
        "major": {},
        "maxRotation": {},
        "minRotation": {},
        "minor": {},
        "mirror": {},
        "padding": {},
        "reverse": {}
      }
    },
    "scatter": {
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      },
      "showLines": {},
      "tooltips": {
        "callbacks": {
          "label": function () {},
          "title": function () {}
        }
      }
    }
  },
  "elements": {
    "Arc": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Line": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Point": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    },
    "Rectangle": {
      "__super__": {
        "closure_uid_896134970": {},
        "hasValue": {
          "closure_uid_896134970": {}
        },
        "initialize": {
          "closure_uid_896134970": {}
        },
        "pivot": {
          "closure_uid_896134970": {}
        },
        "tooltipPosition": {
          "closure_uid_896134970": {}
        },
        "transition": {
          "closure_uid_896134970": {}
        }
      },
      "extend": {
        "closure_uid_896134970": {}
      }
    }
  },
  "helpers": {
    "EPSILON": {},
    "_merger": function () {},
    "_mergerIf": function () {},
    "addEvent": function () {},
    "aliasPixel": function () {},
    "almostEquals": function () {},
    "almostWhole": function () {},
    "arrayEquals": function () {},
    "callCallback": function () {},
    "callback": function () {},
    "canvas": {
      "clear": function () {},
      "clipArea": function () {},
      "drawPoint": function () {},
      "lineTo": function () {},
      "roundedRect": function () {},
      "unclipArea": function () {}
    },
    "clear": function () {},
    "clone": function () {},
    "color": function () {},
    "configMerge": function () {},
    "distanceBetweenPoints": function () {},
    "drawRoundedRectangle": function () {},
    "each": function () {},
    "easing": {
      "effects": {
        "easeInBack": function () {},
        "easeInBounce": function () {},
        "easeInCirc": function () {},
        "easeInCubic": function () {},
        "easeInElastic": function () {},
        "easeInExpo": function () {},
        "easeInOutBack": function () {},
        "easeInOutBounce": function () {},
        "easeInOutCirc": function () {},
        "easeInOutCubic": function () {},
        "easeInOutElastic": function () {},
        "easeInOutExpo": function () {},
        "easeInOutQuad": function () {},
        "easeInOutQuart": function () {},
        "easeInOutQuint": function () {},
        "easeInOutSine": function () {},
        "easeInQuad": function () {},
        "easeInQuart": function () {},
        "easeInQuint": function () {},
        "easeInSine": function () {},
        "easeOutBack": function () {},
        "easeOutBounce": function () {},
        "easeOutCirc": function () {},
        "easeOutCubic": function () {},
        "easeOutElastic": function () {},
        "easeOutExpo": function () {},
        "easeOutQuad": function () {},
        "easeOutQuart": function () {},
        "easeOutQuint": function () {},
        "easeOutSine": function () {},
        "linear": function () {}
      }
    },
    "easingEffects": {
      "easeInBack": function () {},
      "easeInBounce": function () {},
      "easeInCirc": function () {},
      "easeInCubic": function () {},
      "easeInElastic": function () {},
      "easeInExpo": function () {},
      "easeInOutBack": function () {},
      "easeInOutBounce": function () {},
      "easeInOutCirc": function () {},
      "easeInOutCubic": function () {},
      "easeInOutElastic": function () {},
      "easeInOutExpo": function () {},
      "easeInOutQuad": function () {},
      "easeInOutQuart": function () {},
      "easeInOutQuint": function () {},
      "easeInOutSine": function () {},
      "easeInQuad": function () {},
      "easeInQuart": function () {},
      "easeInQuint": function () {},
      "easeInSine": function () {},
      "easeOutBack": function () {},
      "easeOutBounce": function () {},
      "easeOutCirc": function () {},
      "easeOutCubic": function () {},
      "easeOutElastic": function () {},
      "easeOutExpo": function () {},
      "easeOutQuad": function () {},
      "easeOutQuart": function () {},
      "easeOutQuint": function () {},
      "easeOutSine": function () {},
      "linear": function () {}
    },
    "extend": function () {},
    "findIndex": function () {},
    "findNextWhere": function () {},
    "findPreviousWhere": function () {},
    "fontString": function () {},
    "getAngleFromPoint": function () {},
    "getConstraintHeight": function () {},
    "getConstraintWidth": function () {},
    "getHoverColor": function () {},
    "getMaximumHeight": function () {},
    "getMaximumWidth": function () {},
    "getRelativePosition": function () {},
    "getStyle": function () {},
    "getValueAtIndexOrDefault": function () {},
    "getValueOrDefault": function () {},
    "indexOf": function () {},
    "inherits": {
      "closure_uid_896134970": {}
    },
    "isArray": function () {},
    "isNullOrUndef": function () {},
    "isNumber": function () {},
    "isObject": function () {},
    "log10": function () {},
    "longestText": function () {},
    "max": function () {},
    "measureText": function () {},
    "merge": function () {},
    "mergeIf": function () {},
    "min": function () {},
    "nextItem": function () {},
    "niceNum": function () {},
    "noop": function () {},
    "numberOfLabelLines": function () {},
    "options": {
      "resolve": function () {},
      "toLineHeight": function () {},
      "toPadding": function () {}
    },
    "previousItem": function () {},
    "removeEvent": function () {},
    "requestAnimFrame": function () {},
    "retinaScale": function () {},
    "scaleMerge": function () {},
    "sign": function () {},
    "splineCurve": function () {},
    "splineCurveMonotone": function () {},
    "toDegrees": function () {},
    "toRadians": function () {},
    "uid": function () {},
    "valueAtIndexOrDefault": function () {},
    "valueOrDefault": function () {},
    "where": function () {}
  },
  "instances": {},
  "layoutService": {
    "addBox": function () {},
    "configure": function () {},
    "defaults": {},
    "removeBox": function () {},
    "update": function () {}
  },
  "platform": {
    "_enabled": {},
    "_style": {},
    "acquireContext": function () {},
    "addEventListener": function () {},
    "initialize": function () {},
    "releaseContext": function () {},
    "removeEventListener": function () {}
  },
  "pluginService": {
    "_cacheId": {},
    "_plugins": {},
    "clear": function () {},
    "count": function () {},
    "descriptors": function () {},
    "getAll": function () {},
    "notify": function () {},
    "register": function () {},
    "unregister": function () {}
  },
  "plugins": {
    "_cacheId": {},
    "_plugins": {},
    "clear": function () {},
    "count": function () {},
    "descriptors": function () {},
    "getAll": function () {},
    "notify": function () {},
    "register": function () {},
    "unregister": function () {}
  },
  "scaleService": {
    "addScalesToLayout": function () {},
    "closure_uid_896134970": {},
    "constructors": {
      "category": {
        "__super__": {
          "_autoSkip": function () {},
          "afterBuildTicks": function () {},
          "afterCalculateTickRotation": function () {},
          "afterDataLimits": function () {},
          "afterFit": function () {},
          "afterSetDimensions": function () {},
          "afterTickToLabelConversion": function () {},
          "afterUpdate": function () {},
          "beforeBuildTicks": function () {},
          "beforeCalculateTickRotation": function () {},
          "beforeDataLimits": function () {},
          "beforeFit": function () {},
          "beforeSetDimensions": function () {},
          "beforeTickToLabelConversion": function () {},
          "beforeUpdate": function () {},
          "buildTicks": function () {},
          "calculateTickRotation": function () {},
          "closure_uid_896134970": {},
          "constructor": {
            "__super__": {
              "closure_uid_896134970": {},
              "hasValue": {
                "closure_uid_896134970": {}
              },
              "initialize": {
                "closure_uid_896134970": {}
              },
              "pivot": {
                "closure_uid_896134970": {}
              },
              "tooltipPosition": {
                "closure_uid_896134970": {}
              },
              "transition": {
                "closure_uid_896134970": {}
              }
            },
            "closure_uid_896134970": {},
            "extend": {
              "closure_uid_896134970": {}
            }
          },
          "convertTicksToLabels": function () {},
          "determineDataLimits": function () {},
          "draw": function () {},
          "fit": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "getLabelForIndex": function () {},
          "getPadding": function () {},
          "getPixelForDecimal": function () {},
          "getPixelForTick": function () {},
          "getPixelForValue": function () {},
          "getRightValue": function () {},
          "getTicks": function () {},
          "getValueForPixel": function () {},
          "handleMargins": function () {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "isFullWidth": function () {},
          "isHorizontal": function () {},
          "mergeTicksOptions": function () {},
          "pivot": {
            "closure_uid_896134970": {}
          },
          "setDimensions": function () {},
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          },
          "update": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "closure_uid_896134970": {},
      "linear": {
        "__super__": {
          "_autoSkip": function () {},
          "afterBuildTicks": function () {},
          "afterCalculateTickRotation": function () {},
          "afterDataLimits": function () {},
          "afterFit": function () {},
          "afterSetDimensions": function () {},
          "afterTickToLabelConversion": function () {},
          "afterUpdate": function () {},
          "beforeBuildTicks": function () {},
          "beforeCalculateTickRotation": function () {},
          "beforeDataLimits": function () {},
          "beforeFit": function () {},
          "beforeSetDimensions": function () {},
          "beforeTickToLabelConversion": function () {},
          "beforeUpdate": function () {},
          "buildTicks": function () {},
          "calculateTickRotation": function () {},
          "closure_uid_896134970": {},
          "constructor": {
            "__super__": {
              "_autoSkip": function () {},
              "afterBuildTicks": function () {},
              "afterCalculateTickRotation": function () {},
              "afterDataLimits": function () {},
              "afterFit": function () {},
              "afterSetDimensions": function () {},
              "afterTickToLabelConversion": function () {},
              "afterUpdate": function () {},
              "beforeBuildTicks": function () {},
              "beforeCalculateTickRotation": function () {},
              "beforeDataLimits": function () {},
              "beforeFit": function () {},
              "beforeSetDimensions": function () {},
              "beforeTickToLabelConversion": function () {},
              "beforeUpdate": function () {},
              "buildTicks": function () {},
              "calculateTickRotation": function () {},
              "closure_uid_896134970": {},
              "constructor": {
                "__super__": {
                  "closure_uid_896134970": {},
                  "hasValue": {
                    "closure_uid_896134970": {}
                  },
                  "initialize": {
                    "closure_uid_896134970": {}
                  },
                  "pivot": {
                    "closure_uid_896134970": {}
                  },
                  "tooltipPosition": {
                    "closure_uid_896134970": {}
                  },
                  "transition": {
                    "closure_uid_896134970": {}
                  }
                },
                "closure_uid_896134970": {},
                "extend": {
                  "closure_uid_896134970": {}
                }
              },
              "convertTicksToLabels": function () {},
              "determineDataLimits": function () {},
              "draw": function () {},
              "fit": function () {},
              "getBasePixel": function () {},
              "getBaseValue": function () {},
              "getLabelForIndex": function () {},
              "getPadding": function () {},
              "getPixelForDecimal": function () {},
              "getPixelForTick": function () {},
              "getPixelForValue": function () {},
              "getRightValue": function () {},
              "getTicks": function () {},
              "getValueForPixel": function () {},
              "handleMargins": function () {},
              "hasValue": {
                "closure_uid_896134970": {}
              },
              "initialize": {
                "closure_uid_896134970": {}
              },
              "isFullWidth": function () {},
              "isHorizontal": function () {},
              "mergeTicksOptions": function () {},
              "pivot": {
                "closure_uid_896134970": {}
              },
              "setDimensions": function () {},
              "tooltipPosition": {
                "closure_uid_896134970": {}
              },
              "transition": {
                "closure_uid_896134970": {}
              },
              "update": function () {}
            },
            "closure_uid_896134970": {},
            "extend": {
              "closure_uid_896134970": {}
            }
          },
          "convertTicksToLabels": function () {},
          "determineDataLimits": function () {},
          "draw": function () {},
          "fit": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "getLabelForIndex": function () {},
          "getPadding": function () {},
          "getPixelForDecimal": function () {},
          "getPixelForTick": function () {},
          "getPixelForValue": function () {},
          "getRightValue": function () {},
          "getTickLimit": function () {},
          "getTicks": function () {},
          "getValueForPixel": function () {},
          "handleDirectionalChanges": function () {},
          "handleMargins": function () {},
          "handleTickRangeOptions": function () {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "isFullWidth": function () {},
          "isHorizontal": function () {},
          "mergeTicksOptions": function () {},
          "pivot": {
            "closure_uid_896134970": {}
          },
          "setDimensions": function () {},
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          },
          "update": function () {}
        },
        "closure_uid_896134970": {},
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "logarithmic": {
        "__super__": {
          "_autoSkip": function () {},
          "afterBuildTicks": function () {},
          "afterCalculateTickRotation": function () {},
          "afterDataLimits": function () {},
          "afterFit": function () {},
          "afterSetDimensions": function () {},
          "afterTickToLabelConversion": function () {},
          "afterUpdate": function () {},
          "beforeBuildTicks": function () {},
          "beforeCalculateTickRotation": function () {},
          "beforeDataLimits": function () {},
          "beforeFit": function () {},
          "beforeSetDimensions": function () {},
          "beforeTickToLabelConversion": function () {},
          "beforeUpdate": function () {},
          "buildTicks": function () {},
          "calculateTickRotation": function () {},
          "closure_uid_896134970": {},
          "constructor": {
            "__super__": {
              "closure_uid_896134970": {},
              "hasValue": {
                "closure_uid_896134970": {}
              },
              "initialize": {
                "closure_uid_896134970": {}
              },
              "pivot": {
                "closure_uid_896134970": {}
              },
              "tooltipPosition": {
                "closure_uid_896134970": {}
              },
              "transition": {
                "closure_uid_896134970": {}
              }
            },
            "closure_uid_896134970": {},
            "extend": {
              "closure_uid_896134970": {}
            }
          },
          "convertTicksToLabels": function () {},
          "determineDataLimits": function () {},
          "draw": function () {},
          "fit": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "getLabelForIndex": function () {},
          "getPadding": function () {},
          "getPixelForDecimal": function () {},
          "getPixelForTick": function () {},
          "getPixelForValue": function () {},
          "getRightValue": function () {},
          "getTicks": function () {},
          "getValueForPixel": function () {},
          "handleMargins": function () {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "isFullWidth": function () {},
          "isHorizontal": function () {},
          "mergeTicksOptions": function () {},
          "pivot": {
            "closure_uid_896134970": {}
          },
          "setDimensions": function () {},
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          },
          "update": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "radialLinear": {
        "__super__": {
          "_autoSkip": function () {},
          "afterBuildTicks": function () {},
          "afterCalculateTickRotation": function () {},
          "afterDataLimits": function () {},
          "afterFit": function () {},
          "afterSetDimensions": function () {},
          "afterTickToLabelConversion": function () {},
          "afterUpdate": function () {},
          "beforeBuildTicks": function () {},
          "beforeCalculateTickRotation": function () {},
          "beforeDataLimits": function () {},
          "beforeFit": function () {},
          "beforeSetDimensions": function () {},
          "beforeTickToLabelConversion": function () {},
          "beforeUpdate": function () {},
          "buildTicks": function () {},
          "calculateTickRotation": function () {},
          "closure_uid_896134970": {},
          "constructor": {
            "__super__": {
              "_autoSkip": function () {},
              "afterBuildTicks": function () {},
              "afterCalculateTickRotation": function () {},
              "afterDataLimits": function () {},
              "afterFit": function () {},
              "afterSetDimensions": function () {},
              "afterTickToLabelConversion": function () {},
              "afterUpdate": function () {},
              "beforeBuildTicks": function () {},
              "beforeCalculateTickRotation": function () {},
              "beforeDataLimits": function () {},
              "beforeFit": function () {},
              "beforeSetDimensions": function () {},
              "beforeTickToLabelConversion": function () {},
              "beforeUpdate": function () {},
              "buildTicks": function () {},
              "calculateTickRotation": function () {},
              "closure_uid_896134970": {},
              "constructor": {
                "__super__": {
                  "closure_uid_896134970": {},
                  "hasValue": {
                    "closure_uid_896134970": {}
                  },
                  "initialize": {
                    "closure_uid_896134970": {}
                  },
                  "pivot": {
                    "closure_uid_896134970": {}
                  },
                  "tooltipPosition": {
                    "closure_uid_896134970": {}
                  },
                  "transition": {
                    "closure_uid_896134970": {}
                  }
                },
                "closure_uid_896134970": {},
                "extend": {
                  "closure_uid_896134970": {}
                }
              },
              "convertTicksToLabels": function () {},
              "determineDataLimits": function () {},
              "draw": function () {},
              "fit": function () {},
              "getBasePixel": function () {},
              "getBaseValue": function () {},
              "getLabelForIndex": function () {},
              "getPadding": function () {},
              "getPixelForDecimal": function () {},
              "getPixelForTick": function () {},
              "getPixelForValue": function () {},
              "getRightValue": function () {},
              "getTicks": function () {},
              "getValueForPixel": function () {},
              "handleMargins": function () {},
              "hasValue": {
                "closure_uid_896134970": {}
              },
              "initialize": {
                "closure_uid_896134970": {}
              },
              "isFullWidth": function () {},
              "isHorizontal": function () {},
              "mergeTicksOptions": function () {},
              "pivot": {
                "closure_uid_896134970": {}
              },
              "setDimensions": function () {},
              "tooltipPosition": {
                "closure_uid_896134970": {}
              },
              "transition": {
                "closure_uid_896134970": {}
              },
              "update": function () {}
            },
            "closure_uid_896134970": {},
            "extend": {
              "closure_uid_896134970": {}
            }
          },
          "convertTicksToLabels": function () {},
          "determineDataLimits": function () {},
          "draw": function () {},
          "fit": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "getLabelForIndex": function () {},
          "getPadding": function () {},
          "getPixelForDecimal": function () {},
          "getPixelForTick": function () {},
          "getPixelForValue": function () {},
          "getRightValue": function () {},
          "getTickLimit": function () {},
          "getTicks": function () {},
          "getValueForPixel": function () {},
          "handleDirectionalChanges": function () {},
          "handleMargins": function () {},
          "handleTickRangeOptions": function () {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "isFullWidth": function () {},
          "isHorizontal": function () {},
          "mergeTicksOptions": function () {},
          "pivot": {
            "closure_uid_896134970": {}
          },
          "setDimensions": function () {},
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          },
          "update": function () {}
        },
        "closure_uid_896134970": {},
        "extend": {
          "closure_uid_896134970": {}
        }
      },
      "time": {
        "__super__": {
          "_autoSkip": function () {},
          "afterBuildTicks": function () {},
          "afterCalculateTickRotation": function () {},
          "afterDataLimits": function () {},
          "afterFit": function () {},
          "afterSetDimensions": function () {},
          "afterTickToLabelConversion": function () {},
          "afterUpdate": function () {},
          "beforeBuildTicks": function () {},
          "beforeCalculateTickRotation": function () {},
          "beforeDataLimits": function () {},
          "beforeFit": function () {},
          "beforeSetDimensions": function () {},
          "beforeTickToLabelConversion": function () {},
          "beforeUpdate": function () {},
          "buildTicks": function () {},
          "calculateTickRotation": function () {},
          "closure_uid_896134970": {},
          "constructor": {
            "__super__": {
              "closure_uid_896134970": {},
              "hasValue": {
                "closure_uid_896134970": {}
              },
              "initialize": {
                "closure_uid_896134970": {}
              },
              "pivot": {
                "closure_uid_896134970": {}
              },
              "tooltipPosition": {
                "closure_uid_896134970": {}
              },
              "transition": {
                "closure_uid_896134970": {}
              }
            },
            "closure_uid_896134970": {},
            "extend": {
              "closure_uid_896134970": {}
            }
          },
          "convertTicksToLabels": function () {},
          "determineDataLimits": function () {},
          "draw": function () {},
          "fit": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "getLabelForIndex": function () {},
          "getPadding": function () {},
          "getPixelForDecimal": function () {},
          "getPixelForTick": function () {},
          "getPixelForValue": function () {},
          "getRightValue": function () {},
          "getTicks": function () {},
          "getValueForPixel": function () {},
          "handleMargins": function () {},
          "hasValue": {
            "closure_uid_896134970": {}
          },
          "initialize": {
            "closure_uid_896134970": {}
          },
          "isFullWidth": function () {},
          "isHorizontal": function () {},
          "mergeTicksOptions": function () {},
          "pivot": {
            "closure_uid_896134970": {}
          },
          "setDimensions": function () {},
          "tooltipPosition": {
            "closure_uid_896134970": {}
          },
          "transition": {
            "closure_uid_896134970": {}
          },
          "update": function () {}
        },
        "extend": {
          "closure_uid_896134970": {}
        }
      }
    },
    "defaults": {
      "category": {
        "position": {}
      },
      "linear": {
        "position": {},
        "ticks": {
          "callback": function () {}
        }
      },
      "logarithmic": {
        "position": {},
        "ticks": {
          "callback": function () {}
        }
      },
      "radialLinear": {
        "angleLines": {
          "color": {},
          "display": {},
          "lineWidth": {}
        },
        "animate": {},
        "display": {},
        "gridLines": {
          "circular": {}
        },
        "pointLabels": {
          "callback": function () {},
          "display": {},
          "fontSize": {}
        },
        "position": {},
        "ticks": {
          "backdropColor": {},
          "backdropPaddingX": {},
          "backdropPaddingY": {},
          "callback": function () {},
          "showLabelBackdrop": {}
        }
      },
      "time": {
        "bounds": {},
        "distribution": {},
        "position": {},
        "ticks": {
          "autoSkip": {},
          "major": {
            "enabled": {}
          },
          "source": {}
        },
        "time": {
          "displayFormat": {},
          "displayFormats": {
            "day": {},
            "hour": {},
            "millisecond": {},
            "minute": {},
            "month": {},
            "quarter": {},
            "second": {},
            "week": {},
            "year": {}
          },
          "format": {},
          "isoWeekday": {},
          "minUnit": {},
          "parser": {},
          "round": {},
          "unit": {}
        }
      }
    },
    "getScaleConstructor": function () {},
    "getScaleDefaults": function () {},
    "registerScaleType": function () {},
    "updateScaleDefaults": function () {}
  },
  "types": {}
};
Chart.prototype = {
  "bindEvents": function () {},
  "buildOrUpdateControllers": function () {},
  "buildScales": function () {},
  "clear": function () {},
  "construct": function () {},
  "destroy": function () {},
  "destroyDatasetMeta": function () {},
  "draw": function () {},
  "drawDataset": function () {},
  "drawDatasets": function () {},
  "ensureScalesHaveIDs": function () {},
  "eventHandler": function () {},
  "generateLegend": function () {},
  "getDatasetAtEvent": function () {},
  "getDatasetMeta": function () {},
  "getElementAtEvent": function () {},
  "getElementsAtEvent": function () {},
  "getElementsAtEventForMode": function () {},
  "getElementsAtXAxis": function () {},
  "getVisibleDatasetCount": function () {},
  "handleEvent": function () {},
  "initToolTip": function () {},
  "initialize": function () {},
  "isDatasetVisible": function () {},
  "render": function () {},
  "reset": function () {},
  "resetElements": function () {},
  "resize": function () {},
  "stop": function () {},
  "toBase64Image": function () {},
  "transition": function () {},
  "unbindEvents": function () {},
  "update": function () {},
  "updateDataset": function () {},
  "updateDatasets": function () {},
  "updateHoverStyle": function () {},
  "updateLayout": function () {}
};
Chart.Animation.prototype = {
  "chart": function () {},
  "constructor": function () {},
  "currentStep": function () {},
  "easing": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "numSteps": function () {},
  "onAnimationComplete": function () {},
  "onAnimationProgress": function () {},
  "pivot": function () {},
  "render": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.prototype = {
  "bindEvents": function () {},
  "buildOrUpdateControllers": function () {},
  "buildScales": function () {},
  "clear": function () {},
  "construct": function () {},
  "destroy": function () {},
  "destroyDatasetMeta": function () {},
  "draw": function () {},
  "drawDataset": function () {},
  "drawDatasets": function () {},
  "ensureScalesHaveIDs": function () {},
  "eventHandler": function () {},
  "generateLegend": function () {},
  "getDatasetAtEvent": function () {},
  "getDatasetMeta": function () {},
  "getElementAtEvent": function () {},
  "getElementsAtEvent": function () {},
  "getElementsAtEventForMode": function () {},
  "getElementsAtXAxis": function () {},
  "getVisibleDatasetCount": function () {},
  "handleEvent": function () {},
  "initToolTip": function () {},
  "initialize": function () {},
  "isDatasetVisible": function () {},
  "render": function () {},
  "reset": function () {},
  "resetElements": function () {},
  "resize": function () {},
  "stop": function () {},
  "toBase64Image": function () {},
  "transition": function () {},
  "unbindEvents": function () {},
  "update": function () {},
  "updateDataset": function () {},
  "updateDatasets": function () {},
  "updateHoverStyle": function () {},
  "updateLayout": function () {}
};
Chart.Chart.Animation.prototype = {
  "chart": function () {},
  "constructor": function () {},
  "currentStep": function () {},
  "easing": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "numSteps": function () {},
  "onAnimationComplete": function () {},
  "onAnimationProgress": function () {},
  "pivot": function () {},
  "render": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.DatasetController.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateIndex": function () {}
};
Chart.Chart.Element.prototype = {
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.Legend.prototype = {
  "afterBuildLabels": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterUpdate": function () {},
  "beforeBuildLabels": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeUpdate": function () {},
  "buildLabels": function () {},
  "constructor": function () {},
  "draw": function () {},
  "fit": function () {},
  "handleEvent": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isHorizontal": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.LinearScaleBase.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.LinearScaleBase.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.PluginBase.prototype = {
  "constructor": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.Scale.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.Title.prototype = {
  "afterBuildLabels": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterUpdate": function () {},
  "beforeBuildLabels": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeUpdate": function () {},
  "buildLabels": function () {},
  "constructor": function () {},
  "draw": function () {},
  "fit": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isHorizontal": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.Tooltip.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "drawBackground": function () {},
  "drawBody": function () {},
  "drawCaret": function () {},
  "drawFooter": function () {},
  "drawTitle": function () {},
  "getAfterBody": function () {},
  "getBeforeBody": function () {},
  "getBody": function () {},
  "getCaretPosition": function () {},
  "getFooter": function () {},
  "getTitle": function () {},
  "handleEvent": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.controllers.bar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.bubble.prototype = {
  "_resolveElementOptions": function () {},
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.doughnut.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "calculateTotal": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMaxBorderWidth": function () {},
  "getMeta": function () {},
  "getRingIndex": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.horizontalBar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.horizontalBar.__super__.constructor.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.horizontalBar.__super__.dataElementType.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "height": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.controllers.line.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculatePointY": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.pie.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "calculateTotal": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMaxBorderWidth": function () {},
  "getMeta": function () {},
  "getRingIndex": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.polarArea.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "constructor": function () {},
  "countVisibleElements": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.radar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Chart.controllers.scatter.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculatePointY": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Chart.elements.Arc.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.elements.Line.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.elements.Point.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.elements.Rectangle.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "height": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Chart.scaleService.constructors.category.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getLabels": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.category.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.linear.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.linear.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.linear.__super__.constructor.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.logarithmic.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.logarithmic.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.radialLinear.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBasePosition": function () {},
  "getBaseValue": function () {},
  "getDistanceFromCenterForValue": function () {},
  "getIndexAngle": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getPointPosition": function () {},
  "getPointPositionForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setCenterPoint": function () {},
  "setDimensions": function () {},
  "setReductions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.radialLinear.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.radialLinear.__super__.constructor.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.time.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelCapacity": function () {},
  "getLabelForIndex": function () {},
  "getLabelWidth": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForOffset": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tickFormatFunction": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Chart.scaleService.constructors.time.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.prototype = {
  "bindEvents": function () {},
  "buildOrUpdateControllers": function () {},
  "buildScales": function () {},
  "clear": function () {},
  "construct": function () {},
  "destroy": function () {},
  "destroyDatasetMeta": function () {},
  "draw": function () {},
  "drawDataset": function () {},
  "drawDatasets": function () {},
  "ensureScalesHaveIDs": function () {},
  "eventHandler": function () {},
  "generateLegend": function () {},
  "getDatasetAtEvent": function () {},
  "getDatasetMeta": function () {},
  "getElementAtEvent": function () {},
  "getElementsAtEvent": function () {},
  "getElementsAtEventForMode": function () {},
  "getElementsAtXAxis": function () {},
  "getVisibleDatasetCount": function () {},
  "handleEvent": function () {},
  "initToolTip": function () {},
  "initialize": function () {},
  "isDatasetVisible": function () {},
  "render": function () {},
  "reset": function () {},
  "resetElements": function () {},
  "resize": function () {},
  "stop": function () {},
  "toBase64Image": function () {},
  "transition": function () {},
  "unbindEvents": function () {},
  "update": function () {},
  "updateDataset": function () {},
  "updateDatasets": function () {},
  "updateHoverStyle": function () {},
  "updateLayout": function () {}
};
Chart.Controller.Animation.prototype = {
  "chart": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "currentStep": function () {},
  "easing": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "numSteps": function () {},
  "onAnimationComplete": function () {},
  "onAnimationProgress": function () {},
  "pivot": function () {},
  "render": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Controller.DatasetController.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateIndex": function () {}
};
Chart.Controller.Element.prototype = {
  "closure_uid_896134970": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Controller.Legend.prototype = {
  "afterBuildLabels": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterUpdate": function () {},
  "beforeBuildLabels": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeUpdate": function () {},
  "buildLabels": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "fit": function () {},
  "handleEvent": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isHorizontal": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.LinearScaleBase.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.LinearScaleBase.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.PluginBase.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Controller.Scale.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.Title.prototype = {
  "afterBuildLabels": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterUpdate": function () {},
  "beforeBuildLabels": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeUpdate": function () {},
  "buildLabels": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "fit": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isHorizontal": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.Tooltip.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "drawBackground": function () {},
  "drawBody": function () {},
  "drawCaret": function () {},
  "drawFooter": function () {},
  "drawTitle": function () {},
  "getAfterBody": function () {},
  "getBeforeBody": function () {},
  "getBody": function () {},
  "getCaretPosition": function () {},
  "getFooter": function () {},
  "getTitle": function () {},
  "handleEvent": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.controllers.bar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.bubble.prototype = {
  "_resolveElementOptions": function () {},
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.doughnut.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "calculateTotal": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMaxBorderWidth": function () {},
  "getMeta": function () {},
  "getRingIndex": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.horizontalBar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.horizontalBar.__super__.constructor.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.horizontalBar.__super__.dataElementType.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "height": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Controller.controllers.line.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculatePointY": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.pie.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "calculateTotal": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMaxBorderWidth": function () {},
  "getMeta": function () {},
  "getRingIndex": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.polarArea.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "constructor": function () {},
  "countVisibleElements": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.radar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Controller.controllers.scatter.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculatePointY": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.Controller.elements.Arc.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Controller.elements.Line.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Controller.elements.Point.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Controller.elements.Rectangle.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "height": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Controller.scaleService.constructors.category.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getLabels": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.category.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.linear.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.linear.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.linear.__super__.constructor.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.logarithmic.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.logarithmic.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.radialLinear.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBasePosition": function () {},
  "getBaseValue": function () {},
  "getDistanceFromCenterForValue": function () {},
  "getIndexAngle": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getPointPosition": function () {},
  "getPointPositionForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setCenterPoint": function () {},
  "setDimensions": function () {},
  "setReductions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.radialLinear.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.radialLinear.__super__.constructor.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.time.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelCapacity": function () {},
  "getLabelForIndex": function () {},
  "getLabelWidth": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForOffset": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tickFormatFunction": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Controller.scaleService.constructors.time.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.DatasetController.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateIndex": function () {}
};
Chart.Element.prototype = {
  "closure_uid_896134970": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Legend.prototype = {
  "afterBuildLabels": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterUpdate": function () {},
  "beforeBuildLabels": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeUpdate": function () {},
  "buildLabels": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "fit": function () {},
  "handleEvent": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isHorizontal": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.LinearScaleBase.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.LinearScaleBase.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.PluginBase.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.Scale.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Title.prototype = {
  "afterBuildLabels": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterUpdate": function () {},
  "beforeBuildLabels": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeUpdate": function () {},
  "buildLabels": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "fit": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isHorizontal": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.Tooltip.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "drawBackground": function () {},
  "drawBody": function () {},
  "drawCaret": function () {},
  "drawFooter": function () {},
  "drawTitle": function () {},
  "getAfterBody": function () {},
  "getBeforeBody": function () {},
  "getBody": function () {},
  "getCaretPosition": function () {},
  "getFooter": function () {},
  "getTitle": function () {},
  "handleEvent": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.controllers.bar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.controllers.bubble.prototype = {
  "_resolveElementOptions": function () {},
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.controllers.doughnut.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "calculateTotal": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMaxBorderWidth": function () {},
  "getMeta": function () {},
  "getRingIndex": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.controllers.horizontalBar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.controllers.horizontalBar.__super__.constructor.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateBarIndexPixels": function () {},
  "calculateBarValuePixels": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getIndexScale": function () {},
  "getIndexScaleId": function () {},
  "getMeta": function () {},
  "getRuler": function () {},
  "getScaleForId": function () {},
  "getStackCount": function () {},
  "getStackIndex": function () {},
  "getValueScale": function () {},
  "getValueScaleId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateElementGeometry": function () {},
  "updateIndex": function () {}
};
Chart.controllers.horizontalBar.__super__.dataElementType.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "height": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.controllers.line.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculatePointY": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.controllers.pie.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "calculateTotal": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMaxBorderWidth": function () {},
  "getMeta": function () {},
  "getRingIndex": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.controllers.polarArea.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculateCircumference": function () {},
  "constructor": function () {},
  "countVisibleElements": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.controllers.radar.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.controllers.scatter.prototype = {
  "addElementAndReset": function () {},
  "addElements": function () {},
  "buildOrUpdateElements": function () {},
  "calculatePointY": function () {},
  "constructor": function () {},
  "createMetaData": function () {},
  "createMetaDataset": function () {},
  "dataElementType": function () {},
  "datasetElementType": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "getScaleForId": function () {},
  "initialize": function () {},
  "insertElements": function () {},
  "linkScales": function () {},
  "onDataPop": function () {},
  "onDataPush": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {},
  "removeHoverStyle": function () {},
  "reset": function () {},
  "resyncElements": function () {},
  "setHoverStyle": function () {},
  "transition": function () {},
  "update": function () {},
  "updateBezierControlPoints": function () {},
  "updateElement": function () {},
  "updateIndex": function () {}
};
Chart.elements.Arc.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.elements.Line.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.elements.Point.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.elements.Rectangle.prototype = {
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "draw": function () {},
  "getArea": function () {},
  "getCenterPoint": function () {},
  "hasValue": function () {},
  "height": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "tooltipPosition": function () {},
  "transition": function () {}
};
Chart.scaleService.constructors.category.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getLabels": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.category.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.linear.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.linear.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.linear.__super__.constructor.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.logarithmic.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.logarithmic.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.radialLinear.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBasePosition": function () {},
  "getBaseValue": function () {},
  "getDistanceFromCenterForValue": function () {},
  "getIndexAngle": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getPointPosition": function () {},
  "getPointPositionForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setCenterPoint": function () {},
  "setDimensions": function () {},
  "setReductions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.radialLinear.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTickLimit": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleDirectionalChanges": function () {},
  "handleMargins": function () {},
  "handleTickRangeOptions": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.radialLinear.__super__.constructor.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.time.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelCapacity": function () {},
  "getLabelForIndex": function () {},
  "getLabelWidth": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForOffset": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tickFormatFunction": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
Chart.scaleService.constructors.time.__super__.constructor.prototype = {
  "_autoSkip": function () {},
  "afterBuildTicks": function () {},
  "afterCalculateTickRotation": function () {},
  "afterDataLimits": function () {},
  "afterFit": function () {},
  "afterSetDimensions": function () {},
  "afterTickToLabelConversion": function () {},
  "afterUpdate": function () {},
  "beforeBuildTicks": function () {},
  "beforeCalculateTickRotation": function () {},
  "beforeDataLimits": function () {},
  "beforeFit": function () {},
  "beforeSetDimensions": function () {},
  "beforeTickToLabelConversion": function () {},
  "beforeUpdate": function () {},
  "buildTicks": function () {},
  "calculateTickRotation": function () {},
  "closure_uid_896134970": function () {},
  "constructor": function () {},
  "convertTicksToLabels": function () {},
  "determineDataLimits": function () {},
  "draw": function () {},
  "fit": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "getLabelForIndex": function () {},
  "getPadding": function () {},
  "getPixelForDecimal": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getRightValue": function () {},
  "getTicks": function () {},
  "getValueForPixel": function () {},
  "handleMargins": function () {},
  "hasValue": function () {},
  "initialize": function () {},
  "isFullWidth": function () {},
  "isHorizontal": function () {},
  "mergeTicksOptions": function () {},
  "pivot": function () {},
  "setDimensions": function () {},
  "tooltipPosition": function () {},
  "transition": function () {},
  "update": function () {}
};
/**********************************************************************
 * End Generated Extern for Chart
/**********************************************************************/
